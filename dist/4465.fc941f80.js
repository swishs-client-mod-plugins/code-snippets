(self.webpackChunk=self.webpackChunk||[]).push([[4465],{4465:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "conf": () => (/* binding */ conf),\n/* harmony export */   "language": () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: "#"\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "\'", close: "\'" },\n    { open: "`", close: "`" }\n  ],\n  surroundingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "\'", close: "\'" },\n    { open: "`", close: "`" }\n  ]\n};\nvar language = {\n  defaultToken: "",\n  ignoreCase: true,\n  tokenPostfix: ".shell",\n  brackets: [\n    { token: "delimiter.bracket", open: "{", close: "}" },\n    { token: "delimiter.parenthesis", open: "(", close: ")" },\n    { token: "delimiter.square", open: "[", close: "]" }\n  ],\n  keywords: [\n    "if",\n    "then",\n    "do",\n    "else",\n    "elif",\n    "while",\n    "until",\n    "for",\n    "in",\n    "esac",\n    "fi",\n    "fin",\n    "fil",\n    "done",\n    "exit",\n    "set",\n    "unset",\n    "export",\n    "function"\n  ],\n  builtins: [\n    "ab",\n    "awk",\n    "bash",\n    "beep",\n    "cat",\n    "cc",\n    "cd",\n    "chown",\n    "chmod",\n    "chroot",\n    "clear",\n    "cp",\n    "curl",\n    "cut",\n    "diff",\n    "echo",\n    "find",\n    "gawk",\n    "gcc",\n    "get",\n    "git",\n    "grep",\n    "hg",\n    "kill",\n    "killall",\n    "ln",\n    "ls",\n    "make",\n    "mkdir",\n    "openssl",\n    "mv",\n    "nc",\n    "node",\n    "npm",\n    "ping",\n    "ps",\n    "restart",\n    "rm",\n    "rmdir",\n    "sed",\n    "service",\n    "sh",\n    "shopt",\n    "shred",\n    "source",\n    "sort",\n    "sleep",\n    "ssh",\n    "start",\n    "stop",\n    "su",\n    "sudo",\n    "svn",\n    "tee",\n    "telnet",\n    "top",\n    "touch",\n    "vi",\n    "vim",\n    "wall",\n    "wc",\n    "wget",\n    "who",\n    "write",\n    "yes",\n    "zsh"\n  ],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  tokenizer: {\n    root: [\n      [/@identifiersWithDashes/, ""],\n      [/(\\s)((?:@startingWithDash)+)/, ["white", "attribute.name"]],\n      [\n        /[a-zA-Z]\\w*/,\n        {\n          cases: {\n            "@keywords": "keyword",\n            "@builtins": "type.identifier",\n            "@default": ""\n          }\n        }\n      ],\n      { include: "@whitespace" },\n      { include: "@strings" },\n      { include: "@parameters" },\n      { include: "@heredoc" },\n      [/[{}\\[\\]()]/, "@brackets"],\n      [/@symbols/, "delimiter"],\n      { include: "@numbers" },\n      [/[,;]/, "delimiter"]\n    ],\n    whitespace: [\n      [/\\s+/, "white"],\n      [/(^#!.*$)/, "metatag"],\n      [/(^#.*$)/, "comment"]\n    ],\n    numbers: [\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, "number.float"],\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, "number.hex"],\n      [/\\d+/, "number"]\n    ],\n    strings: [\n      [/\'/, "string", "@stringBody"],\n      [/"/, "string", "@dblStringBody"]\n    ],\n    stringBody: [\n      [/\'/, "string", "@popall"],\n      [/./, "string"]\n    ],\n    dblStringBody: [\n      [/"/, "string", "@popall"],\n      [/./, "string"]\n    ],\n    heredoc: [\n      [\n        /(<<[-<]?)(\\s*)([\'"`]?)([\\w\\-]+)([\'"`]?)/,\n        [\n          "constants",\n          "white",\n          "string.heredoc.delimiter",\n          "string.heredoc",\n          "string.heredoc.delimiter"\n        ]\n      ]\n    ],\n    parameters: [\n      [/\\$\\d+/, "variable.predefined"],\n      [/\\$\\w+/, "variable"],\n      [/\\$[*@#?\\-$!0_]/, "variable"],\n      [/\\$\'/, "variable", "@parameterBodyQuote"],\n      [/\\$"/, "variable", "@parameterBodyDoubleQuote"],\n      [/\\$\\(/, "variable", "@parameterBodyParen"],\n      [/\\$\\{/, "variable", "@parameterBodyCurlyBrace"]\n    ],\n    parameterBodyQuote: [\n      [/[^#:%*@\\-!_\']+/, "variable"],\n      [/[#:%*@\\-!_]/, "delimiter"],\n      [/[\']/, "variable", "@pop"]\n    ],\n    parameterBodyDoubleQuote: [\n      [/[^#:%*@\\-!_"]+/, "variable"],\n      [/[#:%*@\\-!_]/, "delimiter"],\n      [/["]/, "variable", "@pop"]\n    ],\n    parameterBodyParen: [\n      [/[^#:%*@\\-!_)]+/, "variable"],\n      [/[#:%*@\\-!_]/, "delimiter"],\n      [/[)]/, "variable", "@pop"]\n    ],\n    parameterBodyCurlyBrace: [\n      [/[^#:%*@\\-!_}]+/, "variable"],\n      [/[#:%*@\\-!_]/, "delimiter"],\n      [/[}]/, "variable", "@pop"]\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4465\n')}}]);