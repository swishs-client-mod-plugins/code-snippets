(self.webpackChunk=self.webpackChunk||[]).push([[4082],{4082:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "conf": () => (/* binding */ conf),\n/* harmony export */   "language": () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/hcl/hcl.ts\nvar conf = {\n  comments: {\n    lineComment: "#",\n    blockComment: ["/*", "*/"]\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\', notIn: ["string"] }\n  ],\n  surroundingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' }\n  ]\n};\nvar language = {\n  defaultToken: "",\n  tokenPostfix: ".hcl",\n  keywords: [\n    "var",\n    "local",\n    "path",\n    "for_each",\n    "any",\n    "string",\n    "number",\n    "bool",\n    "true",\n    "false",\n    "null",\n    "if ",\n    "else ",\n    "endif ",\n    "for ",\n    "in",\n    "endfor"\n  ],\n  operators: [\n    "=",\n    ">=",\n    "<=",\n    "==",\n    "!=",\n    "+",\n    "-",\n    "*",\n    "/",\n    "%",\n    "&&",\n    "||",\n    "!",\n    "<",\n    ">",\n    "?",\n    "...",\n    ":"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\"\']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  terraformFunctions: /(abs|ceil|floor|log|max|min|pow|signum|chomp|format|formatlist|indent|join|lower|regex|regexall|replace|split|strrev|substr|title|trimspace|upper|chunklist|coalesce|coalescelist|compact|concat|contains|distinct|element|flatten|index|keys|length|list|lookup|map|matchkeys|merge|range|reverse|setintersection|setproduct|setunion|slice|sort|transpose|values|zipmap|base64decode|base64encode|base64gzip|csvdecode|jsondecode|jsonencode|urlencode|yamldecode|yamlencode|abspath|dirname|pathexpand|basename|file|fileexists|fileset|filebase64|templatefile|formatdate|timeadd|timestamp|base64sha256|base64sha512|bcrypt|filebase64sha256|filebase64sha512|filemd5|filemd1|filesha256|filesha512|md5|rsadecrypt|sha1|sha256|sha512|uuid|uuidv5|cidrhost|cidrnetmask|cidrsubnet|tobool|tolist|tomap|tonumber|toset|tostring)/,\n  terraformMainBlocks: /(module|data|terraform|resource|provider|variable|output|locals)/,\n  tokenizer: {\n    root: [\n      [\n        /^@terraformMainBlocks([ \\t]*)([\\w-]+|"[\\w-]+"|)([ \\t]*)([\\w-]+|"[\\w-]+"|)([ \\t]*)(\\{)/,\n        ["type", "", "string", "", "string", "", "@brackets"]\n      ],\n      [\n        /(\\w+[ \\t]+)([ \\t]*)([\\w-]+|"[\\w-]+"|)([ \\t]*)([\\w-]+|"[\\w-]+"|)([ \\t]*)(\\{)/,\n        ["identifier", "", "string", "", "string", "", "@brackets"]\n      ],\n      [\n        /(\\w+[ \\t]+)([ \\t]*)([\\w-]+|"[\\w-]+"|)([ \\t]*)([\\w-]+|"[\\w-]+"|)(=)(\\{)/,\n        ["identifier", "", "string", "", "operator", "", "@brackets"]\n      ],\n      { include: "@terraform" }\n    ],\n    terraform: [\n      [/@terraformFunctions(\\()/, ["type", "@brackets"]],\n      [\n        /[a-zA-Z_]\\w*-*/,\n        {\n          cases: {\n            "@keywords": { token: "keyword.$0" },\n            "@default": "variable"\n          }\n        }\n      ],\n      { include: "@whitespace" },\n      { include: "@heredoc" },\n      [/[{}()\\[\\]]/, "@brackets"],\n      [/[<>](?!@symbols)/, "@brackets"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            "@operators": "operator",\n            "@default": ""\n          }\n        }\n      ],\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?/, "number.float"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, "number.float"],\n      [/\\d[\\d\']*/, "number"],\n      [/\\d/, "number"],\n      [/[;,.]/, "delimiter"],\n      [/"/, "string", "@string"],\n      [/\'/, "invalid"]\n    ],\n    heredoc: [\n      [/<<[-]*\\s*["]?([\\w\\-]+)["]?/, { token: "string.heredoc.delimiter", next: "@heredocBody.$1" }]\n    ],\n    heredocBody: [\n      [\n        /([\\w\\-]+)$/,\n        {\n          cases: {\n            "$1==$S2": [\n              {\n                token: "string.heredoc.delimiter",\n                next: "@popall"\n              }\n            ],\n            "@default": "string.heredoc"\n          }\n        }\n      ],\n      [/./, "string.heredoc"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, ""],\n      [/\\/\\*/, "comment", "@comment"],\n      [/\\/\\/.*$/, "comment"],\n      [/#.*$/, "comment"]\n    ],\n    comment: [\n      [/[^\\/*]+/, "comment"],\n      [/\\*\\//, "comment", "@pop"],\n      [/[\\/*]/, "comment"]\n    ],\n    string: [\n      [/\\$\\{/, { token: "delimiter", next: "@stringExpression" }],\n      [/[^\\\\"\\$]+/, "string"],\n      [/@escapes/, "string.escape"],\n      [/\\\\./, "string.escape.invalid"],\n      [/"/, "string", "@popall"]\n    ],\n    stringInsideExpression: [\n      [/[^\\\\"]+/, "string"],\n      [/@escapes/, "string.escape"],\n      [/\\\\./, "string.escape.invalid"],\n      [/"/, "string", "@pop"]\n    ],\n    stringExpression: [\n      [/\\}/, { token: "delimiter", next: "@pop" }],\n      [/"/, "string", "@stringInsideExpression"],\n      { include: "@terraform" }\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4082\n')}}]);