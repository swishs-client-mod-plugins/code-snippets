(self.webpackChunk=self.webpackChunk||[]).push([[3501],{3501:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "conf": () => (/* binding */ conf),\n/* harmony export */   "language": () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/kotlin/kotlin.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\\'\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: "//",\n    blockComment: ["/*", "*/"]\n  },\n  brackets: [\n    ["{", "}"],\n    ["[", "]"],\n    ["(", ")"]\n  ],\n  autoClosingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "\'", close: "\'" }\n  ],\n  surroundingPairs: [\n    { open: "{", close: "}" },\n    { open: "[", close: "]" },\n    { open: "(", close: ")" },\n    { open: \'"\', close: \'"\' },\n    { open: "\'", close: "\'" },\n    { open: "<", close: ">" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp("^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))"),\n      end: new RegExp("^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))")\n    }\n  }\n};\nvar language = {\n  defaultToken: "",\n  tokenPostfix: ".kt",\n  keywords: [\n    "as",\n    "as?",\n    "break",\n    "class",\n    "continue",\n    "do",\n    "else",\n    "false",\n    "for",\n    "fun",\n    "if",\n    "in",\n    "!in",\n    "interface",\n    "is",\n    "!is",\n    "null",\n    "object",\n    "package",\n    "return",\n    "super",\n    "this",\n    "throw",\n    "true",\n    "try",\n    "typealias",\n    "val",\n    "var",\n    "when",\n    "while",\n    "by",\n    "catch",\n    "constructor",\n    "delegate",\n    "dynamic",\n    "field",\n    "file",\n    "finally",\n    "get",\n    "import",\n    "init",\n    "param",\n    "property",\n    "receiver",\n    "set",\n    "setparam",\n    "where",\n    "actual",\n    "abstract",\n    "annotation",\n    "companion",\n    "const",\n    "crossinline",\n    "data",\n    "enum",\n    "expect",\n    "external",\n    "final",\n    "infix",\n    "inline",\n    "inner",\n    "internal",\n    "lateinit",\n    "noinline",\n    "open",\n    "operator",\n    "out",\n    "override",\n    "private",\n    "protected",\n    "public",\n    "reified",\n    "sealed",\n    "suspend",\n    "tailrec",\n    "vararg",\n    "field",\n    "it"\n  ],\n  operators: [\n    "+",\n    "-",\n    "*",\n    "/",\n    "%",\n    "=",\n    "+=",\n    "-=",\n    "*=",\n    "/=",\n    "%=",\n    "++",\n    "--",\n    "&&",\n    "||",\n    "!",\n    "==",\n    "!=",\n    "===",\n    "!==",\n    ">",\n    "<",\n    "<=",\n    ">=",\n    "[",\n    "]",\n    "!!",\n    "?.",\n    "?:",\n    "::",\n    "..",\n    ":",\n    "?",\n    "->",\n    "@",\n    ";",\n    "$",\n    "_"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\"\']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  tokenizer: {\n    root: [\n      [/[A-Z][\\w\\$]*/, "type.identifier"],\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            "@keywords": { token: "keyword.$0" },\n            "@default": "identifier"\n          }\n        }\n      ],\n      { include: "@whitespace" },\n      [/[{}()\\[\\]]/, "@brackets"],\n      [/[<>](?!@symbols)/, "@brackets"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            "@operators": "delimiter",\n            "@default": ""\n          }\n        }\n      ],\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, "annotation"],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, "number.float"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, "number.float"],\n      [/0[xX](@hexdigits)[Ll]?/, "number.hex"],\n      [/0(@octaldigits)[Ll]?/, "number.octal"],\n      [/0[bB](@binarydigits)[Ll]?/, "number.binary"],\n      [/(@digits)[fFdD]/, "number.float"],\n      [/(@digits)[lL]?/, "number"],\n      [/[;,.]/, "delimiter"],\n      [/"([^"\\\\]|\\\\.)*$/, "string.invalid"],\n      [/"""/, "string", "@multistring"],\n      [/"/, "string", "@string"],\n      [/\'[^\\\\\']\'/, "string"],\n      [/(\')(@escapes)(\')/, ["string", "string.escape", "string"]],\n      [/\'/, "string.invalid"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, ""],\n      [/\\/\\*\\*(?!\\/)/, "comment.doc", "@javadoc"],\n      [/\\/\\*/, "comment", "@comment"],\n      [/\\/\\/.*$/, "comment"]\n    ],\n    comment: [\n      [/[^\\/*]+/, "comment"],\n      [/\\/\\*/, "comment", "@comment"],\n      [/\\*\\//, "comment", "@pop"],\n      [/[\\/*]/, "comment"]\n    ],\n    javadoc: [\n      [/[^\\/*]+/, "comment.doc"],\n      [/\\/\\*/, "comment.doc", "@push"],\n      [/\\/\\*/, "comment.doc.invalid"],\n      [/\\*\\//, "comment.doc", "@pop"],\n      [/[\\/*]/, "comment.doc"]\n    ],\n    string: [\n      [/[^\\\\"]+/, "string"],\n      [/@escapes/, "string.escape"],\n      [/\\\\./, "string.escape.invalid"],\n      [/"/, "string", "@pop"]\n    ],\n    multistring: [\n      [/[^\\\\"]+/, "string"],\n      [/@escapes/, "string.escape"],\n      [/\\\\./, "string.escape.invalid"],\n      [/"""/, "string", "@pop"],\n      [/./, "string"]\n    ]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3501\n')}}]);