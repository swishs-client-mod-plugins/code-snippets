(self.webpackChunk=self.webpackChunk||[]).push([[4203,1222],{4203:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ SettingsPanel)\n});\n\n// EXTERNAL MODULE: ./src/renderer/modules/Manager.ts\nvar Manager = __webpack_require__(1222);\n// EXTERNAL MODULE: ./src/renderer/modules/Patcher.ts\nvar Patcher = __webpack_require__(7383);\n// EXTERNAL MODULE: ./src/renderer/modules/Webpack.ts\nvar Webpack = __webpack_require__(795);\n// EXTERNAL MODULE: ./src/renderer/modules/Utilities.tsx\nvar Utilities = __webpack_require__(647);\n// EXTERNAL MODULE: ./node_modules/.pnpm/monaco-editor@0.32.1/node_modules/monaco-editor/esm/vs/editor/editor.main.js + 267 modules\nvar editor_main = __webpack_require__(6653);\n;// CONCATENATED MODULE: ./src/renderer/components/sections/Editor.tsx\nconst join=(0,Utilities/* cjoin */.hI)(\'editor\');const SettingsStore=Webpack/* default.getByProps */.Z.getByProps(\'getFullState\',\'settings\');const rgbToHex=([red,green,blue,alpha])=>`#${[red,green,blue,alpha].map(v=>v?.toString(16).padStart(2,\'0\')).join(\'\')}`;const parseColor=str=>{const sheet=new CSSStyleSheet;sheet.replaceSync(`target {color: ${str}}`);return sheet.cssRules[0].style.color.match(/[\\.\\d]+/g).map(Number)};const getValue=value=>rgbToHex(parseColor(body.getPropertyValue(value).trim()));let body;const createEditorTheme=()=>{body=getComputedStyle(document.body);const colors={textColor:getValue(\'--text-normal\'),bgAccent:getValue(\'--background-accent\'),bgFloating:getValue(\'--background-floating\'),bgTeritary:getValue(\'--background-tertiary\')};const lightMode=SettingsStore.settings.appearance.theme-1;editor_main.editor.defineTheme(\'code-snippets\',{inherit:true,base:lightMode?\'vs\':\'vs-dark\',rules:[{background:colors.bgTeritary}],colors:{\'editor.background\':colors.bgTeritary,\'editorGutter.background\':colors.bgTeritary,\'editorLineNumber.foreground\':colors.textColor}})};const parseLanguage=extension=>{if(!extension)return\'\';switch(extension){case\'js\':case\'jsx\':return\'javascript\';case\'ts\':return\'typescript\';case\'sass\':return\'scss\';default:return extension}};/* harmony default export */ const Editor = (({states})=>{const{editorRef}=states;const bindings=React.useRef([]);const containerRef=React.useRef();const setUnsaved=states.unsavedState[1];const[collapsed]=states.collapsedState;const[currentSnippet]=states.currentSnippet;const onKeyPress=event=>{if(!editorRef.current)return;if(event.ctrlKey&&event.key===\'s\'){const scriptType=Manager["default"].getScriptType(currentSnippet);const didError=Manager["default"].updateSnippet(currentSnippet,{enabled:scriptType||Manager["default"].getSnippet(currentSnippet).enabled,code:editorRef.current.getValue()});if(didError)return;Manager["default"].makeToast(`Successfully saved ${scriptType?\'\':\'and loaded\'} snippet ${currentSnippet}!`,true);setUnsaved(false);if(!scriptType)return;Manager["default"].runSnippet(currentSnippet,Manager["default"].ScriptType.CSS,true)}};React.useEffect(()=>{CodeSnippetsNative.readDir(\'editor-types\').forEach(module=>{const content=CodeSnippetsNative.readFile(`editor-types/${module}`);editor_main.languages.typescript.typescriptDefaults.addExtraLib(content);editor_main.languages.typescript.javascriptDefaults.addExtraLib(content)});createEditorTheme()},[]);React.useEffect(()=>{if(!containerRef.current)return;editor_main.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSemanticValidation:false,noSyntaxValidation:false,diagnosticCodesToIgnore:[1108]});const Editor=editorRef.current=editor_main.editor.create(containerRef.current,{automaticLayout:true,theme:\'code-snippets\',value:Manager["default"].getSnippet(currentSnippet).code,language:parseLanguage(Manager["default"].getSnippet(currentSnippet).extension)});bindings.current.push(Editor.onDidChangeModelContent(()=>{if(Editor.getValue()!==Manager["default"].getSnippet(currentSnippet).code)return setUnsaved(true);setUnsaved(false)}));if(Manager["default"].getScriptType(currentSnippet)){const resolveTimeout=()=>{tracker=0;Manager["default"].updateSnippet(currentSnippet,{code:Editor.getValue()});if(!Manager["default"].getSnippet(currentSnippet).enabled)return;Manager["default"].runSnippet(currentSnippet,Manager["default"].ScriptType.CSS,true)};let tracker;bindings.current.push(Editor.onDidChangeModelContent(()=>{if(tracker!==0)clearTimeout(tracker);tracker=setTimeout(resolveTimeout,200)}))}document.addEventListener(\'keydown\',onKeyPress);return()=>{Editor.dispose();(0,Utilities/* callArgs */.VS)(bindings.current,\'dispose\');document.removeEventListener(\'keydown\',onKeyPress)}},[containerRef,editorRef,currentSnippet]);return React.createElement("div",{className:join(\'container\',collapsed?\'collapsed\':\'expanded\'),ref:containerRef})});\n;// CONCATENATED MODULE: ./src/renderer/components/icons/Save.tsx\n/* harmony default export */ const Save = (React.memo(()=>React.createElement("svg",{viewBox:"0 0 24 24",width:"20",height:"20",fill:"currentColor"},React.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),React.createElement("path",{d:"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/Clean.tsx\n/* harmony default export */ const Clean = (React.memo(()=>React.createElement("svg",{viewBox:"0 0 24 24",width:"20",height:"20",fill:"currentColor"},React.createElement("path",{d:"M16,11h-1V3c0-1.1-0.9-2-2-2h-2C9.9,1,9,1.9,9,3v8H8c-2.76,0-5,2.24-5,5v7h18v-7C21,13.24,18.76,11,16,11z M19,21h-2v-3 c0-0.55-0.45-1-1-1s-1,0.45-1,1v3h-2v-3c0-0.55-0.45-1-1-1s-1,0.45-1,1v3H9v-3c0-0.55-0.45-1-1-1s-1,0.45-1,1v3H5v-5 c0-1.65,1.35-3,3-3h8c1.65,0,3,1.35,3,3V21z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/modals/UserInput.tsx\nconst[Button,FormItem,FormTitle,TextInput,]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byProps */.x.byProps(\'DropdownSizes\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormItem\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormTitle\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'TextInput\'));const{Modal}=Webpack/* default.components */.Z.components;/* harmony default export */ const UserInput = (({event,action,options})=>{const[input,_setInput]=React.useState(options?.initialInput||\'\');const[rejectMessage,setRejectMessage]=React.useState(undefined);const inputRef=React.useRef();const setInput=data=>{inputRef.current=data;_setInput(data)};const runAction=()=>{if(options?.rejectFilter){const reject=options.rejectFilter(inputRef.current);if(reject)return setRejectMessage(reject)}action(inputRef.current);event.onClose()};const onEnter=keyPressEvent=>{keyPressEvent.key===\'Enter\'&&runAction()};React.useEffect(()=>{document.addEventListener(\'keydown\',onEnter);return()=>document.removeEventListener(\'keydown\',onEnter)},[]);return React.createElement(Modal.Root,{transitionState:event.transitionState,size:Modal.Sizes.SMALL},React.createElement(Modal.Header,null,React.createElement(FormTitle,{tag:"h3"},options?.titleText||\'Input Modal\'),React.createElement(Modal.CloseButton,{onClick:event.onClose})),React.createElement("div",{style:{marginTop:\'10px\'}}),React.createElement(Modal.Content,null,React.createElement(FormItem,{error:rejectMessage,title:options?.headerText||\'Input Text\'},React.createElement(TextInput,{value:input,onChange:setInput,style:{marginBottom:\'10px\'},placeholder:options?.placeholder||\'rape LMAO\'}))),React.createElement(Modal.Footer,null,React.createElement(Button,{onClick:runAction,color:Button.Colors.GREEN},options?.buttonText||\'Submit\'),React.createElement(Button,{onClick:event.onClose,look:Button.Looks.LINK,color:Button.Colors.TRANSPARENT},"Cancel")))});\n;// CONCATENATED MODULE: ./src/renderer/components/modals/DeleteConfirm.tsx\nconst{Modal: DeleteConfirm_Modal}=Webpack/* default.components */.Z.components;const[Text,DeleteConfirm_Button]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byDisplayName */.x.byDisplayName(\'LegacyText\'),Webpack/* Filters.byProps */.x.byProps(\'DropdownSizes\'));const DeleteConfirm_join=(0,Utilities/* cjoin */.hI)(\'modal-delete\');/* harmony default export */ const DeleteConfirm = (({event,action})=>{return React.createElement(DeleteConfirm_Modal.Root,{size:DeleteConfirm_Modal.Sizes.SMALL,transitionState:event.transitionState},React.createElement(DeleteConfirm_Modal.Content,{className:DeleteConfirm_join(\'content\')},React.createElement(DeleteConfirm_Modal.CloseButton,{onClick:event.onClose,className:DeleteConfirm_join(\'closebutton\')}),React.createElement(Text,{size:Text.Sizes.SIZE_24,className:DeleteConfirm_join(\'title\'),color:Text.Colors.HEADER_PRIMARY},"This action is irreversible."),React.createElement(Text,{size:Text.Sizes.SIZE_16,className:DeleteConfirm_join(\'subtitle\'),color:Text.Colors.HEADER_SECONDARY},"Only click the below button if you are absolutely sure.")),React.createElement(DeleteConfirm_Modal.Footer,null,React.createElement(DeleteConfirm_Button,{size:DeleteConfirm_Button.Sizes.LARGE,color:DeleteConfirm_Button.Colors.RED,className:DeleteConfirm_join(\'button\'),onClick:()=>{action();event.onClose()}},"Delete it.")))});\n;// CONCATENATED MODULE: ./src/renderer/components/sections/TopBar.tsx\nconst pjoin=(0,Utilities/* cjoin */.hI)(\'topbar\');const[Switch,TopBar_FormTitle,ButtonColors,ModalActions,]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byDisplayName */.x.byDisplayName(\'Switch\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormTitle\'),Webpack/* Filters.byProps */.x.byProps(\'dangerous\',\'selected\'),Webpack/* Filters.byProps */.x.byProps(\'closeModal\'));const{Icon,Tooltip}=Webpack/* default.components */.Z.components;const{button: TopBar_button,dangerous,disabled}=ButtonColors;/* harmony default export */ const TopBar = (({states})=>{const editor=states.editorRef.current;const[collapsed]=states.collapsedState;const[unsaved,setUnsaved]=states.unsavedState;const[currentSnippet,setCurrentSnippet,lastSnippet]=states.currentSnippet;const snippet=Manager["default"].getSnippet(currentSnippet);const scriptType=Manager["default"].getScriptType(currentSnippet);return React.createElement("div",{className:pjoin(\'container\',collapsed?\'collapsed\':\'expanded\')},!Boolean(scriptType)?React.createElement(Tooltip,{position:"top",text:"Click me to run the code!"},React.createElement(TopBar_FormTitle,{tag:"h3",className:pjoin(\'jstitle\'),onClick:()=>Manager["default"].runSnippet(currentSnippet,scriptType)},currentSnippet)):React.createElement(TopBar_FormTitle,{tag:"h3"},currentSnippet),React.createElement("div",{style:{flex:\'auto\'}}),unsaved&&!Boolean(scriptType)?React.createElement(Tooltip,{position:"top",text:"You can press CTRL + S!"},React.createElement("div",{className:TopBar_button,onClick:()=>{const didError=Manager["default"].updateSnippet(currentSnippet,{code:editor.getValue()});if(didError)return;Manager["default"].makeToast(`Successfully saved snippet ${currentSnippet}!`,true);setUnsaved(false)}},React.createElement(Save,null))):null,!Boolean(scriptType)&&Manager["default"].cleanups[currentSnippet]?React.createElement(Tooltip,{position:"top",text:!Boolean(scriptType)?\'Run Return Function\':\'Remove CSS\'},React.createElement("div",{className:TopBar_button,onClick:()=>Manager["default"].cleanups[currentSnippet]()},React.createElement(Clean,null))):null,!Boolean(scriptType)||React.createElement("div",{className:pjoin(\'switch\')},React.createElement(Switch,{checked:snippet.enabled,className:pjoin(\'switch\'),onChange:value=>{const didError=Manager["default"].updateSnippet(currentSnippet,{enabled:value});if(didError)return;if(!value)return Manager["default"].cleanups[currentSnippet]?.();Manager["default"].runSnippet(currentSnippet,Manager["default"].ScriptType.CSS,true);Manager["default"].makeToast(`Successfully saved and loaded snippet ${currentSnippet}!`,true)}})),snippet.gist?React.createElement(Tooltip,{position:"top",text:"Pull snippet from Github"},React.createElement("div",{className:TopBar_button,onClick:async()=>{const code=await Manager["default"].pullGist(snippet.gist).catch(error=>{Manager["default"].makeToast(\'Failed to pull snippet from Github!\',false);Logger.error(\'Failed to pull snippet from Github!\',error)});if(code)Manager["default"].updateSnippet(currentSnippet,{code});states.remountMonaco()}},React.createElement(Icon.Pull,{height:"20",width:"20"}))):React.createElement(Tooltip,{position:"top",text:"Connect to Github Gist"},React.createElement("div",{className:TopBar_button,onClick:async()=>{const id=await new Promise(resolve=>{ModalActions.openModal(event=>{return React.createElement(UserInput,{event:event,action:resolve,options:{buttonText:\'Save ID\',titleText:\'Github Gist ID\',headerText:\'Enter the ID of the gist you want to pull from\',placeholder:\'aec93e7d46e041e5c37f3d25bcbee20c\',rejectFilter:input=>{if(!/^[0-9a-f]{32}$/.test(input))return\'Invalid ID!\'}}})})});await (0,Utilities/* sleep */._v)(4);ModalActions.openModal(event=>{return React.createElement(UserInput,{event:event,action:name=>{Manager["default"].updateSnippet(currentSnippet,{gist:{id,name}})},options:{buttonText:\'Save Name\',placeholder:\'Keyword Search.ts\',titleText:\'Github Gist File Name (if it\\\'s blank it\\\'ll choose the first file)\',headerText:\'Enter the name of file in the gist (or nothing if the gist only has one file)\'}})})}},React.createElement(Icon.Link,{height:"20",width:"20"}))),Boolean(scriptType)||React.createElement(Tooltip,{position:"top",text:`${!snippet.enabled?\'Turn on\':\'Turn off\'} Run on Startup`},React.createElement("div",{className:`${TopBar_button} ${!snippet.enabled?(0,Utilities/* join */.v_)(disabled,pjoin(\'rocket\')):\'\'}`,onClick:()=>Manager["default"].updateSnippet(currentSnippet,{enabled:!snippet.enabled})},React.createElement(Icon.Rocket,{height:"20",width:"20"}))),React.createElement("div",{className:(0,Utilities/* join */.v_)(TopBar_button,dangerous),onClick:()=>{ModalActions.openModal(event=>{return React.createElement(DeleteConfirm,{event:event,action:()=>{Manager["default"].deleteSnippet(currentSnippet);setCurrentSnippet(lastSnippet)}})})}},React.createElement(Icon.Trash,{height:"20",width:"20"})))});\n;// CONCATENATED MODULE: ./src/renderer/components/icons/TS.tsx\n/* harmony default export */ const TS = (React.memo(()=>React.createElement("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},React.createElement("path",{fill:"#3178C6","fill-rule":"evenodd","clip-rule":"evenodd",d:"M13.1682 14.6681V17.0119C13.5478 17.2088 14.0119 17.3541 14.5275 17.4525C15.0432 17.5509 15.6057 17.5978 16.1682 17.5978C16.7307 17.5978 17.2463 17.5463 17.7619 17.4384C18.2775 17.3306 18.6994 17.1525 19.0744 16.9228C19.4541 16.6744 19.7775 16.3603 19.965 15.9384C20.1525 15.5166 20.2978 15.0478 20.2978 14.4384C20.2978 14.0119 20.2322 13.6416 20.1057 13.3134C19.9791 12.9853 19.7963 12.7041 19.5432 12.4697C19.3041 12.2213 19.0275 12.0009 18.6994 11.8134C18.3713 11.6259 17.9963 11.4291 17.5744 11.2509C17.265 11.1244 17.0119 11.0025 16.7307 10.8806C16.4869 10.7588 16.276 10.6369 16.1213 10.515C15.9478 10.3884 15.8166 10.2572 15.7228 10.1213C15.6291 9.98063 15.5822 9.82594 15.5822 9.6525C15.5822 9.49313 15.6239 9.34781 15.7088 9.21656C15.7936 9.08531 15.9103 8.9775 16.0603 8.88375C16.2103 8.79 16.3978 8.71969 16.6228 8.66813C16.8432 8.61656 17.0869 8.59313 17.3728 8.59313C17.5697 8.59313 17.776 8.60766 17.9822 8.63719C18.1978 8.66672 18.4182 8.71219 18.6385 8.77313C18.8588 8.83406 19.0744 8.90906 19.2947 9.00281C19.501 9.09656 19.6932 9.20438 19.8572 9.32625V7.12313C19.501 6.98719 19.1072 6.88406 18.6853 6.81844C18.2635 6.75281 17.7947 6.72 17.2322 6.72C16.6697 6.72 16.1541 6.78094 15.6385 6.89813C15.1228 7.01531 14.701 7.20281 14.326 7.46063C13.9463 7.71375 13.6697 8.02313 13.4353 8.445C13.215 8.83875 13.1072 9.28875 13.1072 9.85125C13.1072 10.5544 13.3088 11.1638 13.7166 11.6325C14.1197 12.1481 14.7478 12.5231 15.5447 12.8981C15.8682 13.0294 16.1541 13.1606 16.4353 13.2872C16.7166 13.4138 16.951 13.545 17.1385 13.6809C17.34 13.8169 17.4994 13.9669 17.6072 14.1263C17.7244 14.2856 17.7853 14.4731 17.7853 14.6888C17.7853 14.8388 17.7488 14.9794 17.6775 15.1106C17.6063 15.2419 17.4947 15.3544 17.3447 15.4481C17.1947 15.5419 17.0119 15.6169 16.7822 15.6731C16.5619 15.7247 16.3135 15.7528 15.9853 15.7528C15.4697 15.7528 14.9541 15.6638 14.4853 15.4856C13.9697 15.3075 13.501 15.0403 13.0791 14.6888L13.1682 14.6681ZM9.23065 8.9025H12.2307V6.98063H3.84003V8.9025H6.84003V17.4806H9.23065V8.9025Z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/JS.tsx\n/* harmony default export */ const JS = (React.memo(()=>React.createElement("svg",{width:"20",height:"20",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},React.createElement("path",{fill:"#F7DF1E",d:"M13.6427 14.579C14.1261 15.3684 14.7551 15.9486 15.8675 15.9486C16.8019 15.9486 17.3989 15.4815 17.3989 14.8362C17.3989 14.0629 16.7855 13.789 15.757 13.339L15.1932 13.0971C13.5657 12.4038 12.4846 11.5352 12.4846 9.69905C12.4846 8.00762 13.7734 6.72 15.7875 6.72C17.2214 6.72 18.2522 7.21905 18.9951 8.52572L17.2389 9.65333C16.8522 8.96 16.4351 8.68686 15.7875 8.68686C15.1269 8.68686 14.7082 9.10591 14.7082 9.65333C14.7082 10.3299 15.1273 10.6038 16.0949 11.0229L16.6587 11.2644C18.5749 12.0861 19.6568 12.9238 19.6568 14.8072C19.6568 16.8377 18.0617 17.9501 15.9196 17.9501C13.8252 17.9501 12.472 16.952 11.8099 15.6438L13.6427 14.579ZM5.67584 14.7745C6.03012 15.403 6.35241 15.9345 7.12726 15.9345C7.86822 15.9345 8.33565 15.6446 8.33565 14.5173V6.84876H10.5909V14.5478C10.5909 16.883 9.22174 17.9459 7.22326 17.9459C5.41755 17.9459 4.37184 17.0114 3.84003 15.8859L5.67584 14.7745Z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/JSX.tsx\n/* harmony default export */ const JSX = (React.memo(()=>React.createElement("svg",{width:"20",height:"20",fill:"none",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},React.createElement("path",{fill:"#61DAFB",d:"M12 13.6763C13.1322 13.6763 14.05 12.7584 14.05 11.6263C14.05 10.4941 13.1322 9.57626 12 9.57626C10.8678 9.57626 9.95001 10.4941 9.95001 11.6263C9.95001 12.7584 10.8678 13.6763 12 13.6763Z"}),React.createElement("path",{stroke:"#61DAFB",d:"M12 15.8263C18.0751 15.8263 23 13.9459 23 11.6263C23 9.30667 18.0751 7.42627 12 7.42627C5.92487 7.42627 1 9.30667 1 11.6263C1 13.9459 5.92487 15.8263 12 15.8263Z"}),React.createElement("path",{stroke:"#61DAFB",d:"M8.36272 13.7263C11.4003 18.9875 15.4912 22.3124 17.5 21.1526C19.5089 19.9928 18.6749 14.7875 15.6373 9.52628C12.5998 4.26506 8.50885 0.940202 6.50002 2.1C4.49119 3.2598 5.32515 8.46506 8.36272 13.7263Z"}),React.createElement("path",{stroke:"#61DAFB",d:"M8.36272 9.52629C5.32515 14.7875 4.49119 19.9928 6.50002 21.1526C8.50885 22.3124 12.5998 18.9875 15.6373 13.7263C18.6749 8.46507 19.5089 3.25981 17.5 2.10001C15.4912 0.940214 11.4003 4.26507 8.36272 9.52629Z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/CSS.tsx\n/* harmony default export */ const CSS = (React.memo(()=>React.createElement("svg",{width:"20",height:"16",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},React.createElement("path",{fill:"#42a5f5",d:"m5 3-.65 3.34h13.59L17.5 8.5H3.92l-.66 3.33h13.59l-.76 3.81-5.48 1.81-4.75-1.81.33-1.64H2.85l-.79 4 7.85 3 9.05-3 1.2-6.03.24-1.21L21.94 3H5z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/SASS.tsx\n/* harmony default export */ const SASS = (React.memo(()=>React.createElement("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},React.createElement("path",{fill:"#EC407A",stroke:"#EC407A","stroke-width":"0.781754",d:"M20.1142 4.61891C19.529 2.32273 15.7219 1.56817 12.1186 2.84814C9.974 3.61019 7.65324 4.80582 5.98376 6.36702C3.999 8.22342 3.68249 9.83881 3.81339 10.514C4.27337 12.8958 7.53747 14.4533 8.87907 15.608V15.6149C8.48326 15.8094 5.58795 17.275 4.91024 18.7733C4.19537 20.3541 5.02409 21.488 5.57283 21.641C7.27318 22.1141 9.01755 21.2634 9.9558 19.8645C10.8607 18.5147 10.7852 16.7722 10.3919 15.9051C10.9343 15.7622 11.5667 15.698 12.3703 15.7918C14.6383 16.0567 15.0832 17.4726 14.9982 18.0654C14.9132 18.6582 14.4375 18.9841 14.2783 19.0823C14.1191 19.1804 14.0707 19.2151 14.0839 19.288C14.1034 19.3944 14.177 19.3906 14.3123 19.3673C14.4992 19.3359 15.5029 18.8853 15.5463 17.7916C15.601 16.4028 14.2701 14.8491 11.9135 14.89C10.9431 14.907 10.3327 14.9989 9.89158 15.1632C9.85889 15.126 9.82616 15.0889 9.79155 15.0524C8.33475 13.498 5.64147 12.3987 5.75532 10.3089C5.79689 9.54932 6.06118 7.54888 10.9305 5.12233C14.9195 3.13446 18.1132 3.6819 18.665 4.8939C19.4535 6.62569 16.9584 9.84448 12.8159 10.3089C11.2376 10.4857 10.4063 9.874 10.1999 9.64624C9.9822 9.40648 9.95014 9.39577 9.8683 9.44046C9.73616 9.51409 9.81982 9.72553 9.8683 9.85201C9.99228 10.1742 10.4995 10.745 11.3647 11.0288C12.1262 11.2786 13.9788 11.4158 16.2203 10.5493C18.7298 9.57702 20.69 6.87616 20.1142 4.61891V4.61891ZM9.43601 16.3198C9.62417 17.0158 9.60339 17.6645 9.40894 18.2516C9.3658 18.3824 9.31409 18.5102 9.25414 18.6342C9.10438 18.9451 8.90302 19.2358 8.65697 19.5045C7.90558 20.3239 6.85659 20.6341 6.40664 20.3729C5.92088 20.091 6.16438 18.9357 7.03467 18.0157C7.97163 17.0252 9.31956 16.3884 9.31956 16.3884L9.31769 16.3845L9.43601 16.3197V16.3198Z"}))));\n;// CONCATENATED MODULE: ./src/renderer/components/icons/Icon.tsx\n/* harmony default export */ const icons_Icon = (({extension})=>{switch(extension){case\'ts\':return React.createElement(TS,null);case\'js\':return React.createElement(JS,null);case\'css\':return React.createElement(CSS,null);case\'jsx\':return React.createElement(JSX,null);case\'scss\':return React.createElement(SASS,null);default:return React.createElement(React.Fragment,null)}});\n;// CONCATENATED MODULE: ./src/renderer/components/utility/ForEachOptimized.tsx\n/* harmony default export */ const ForEachOptimized = (({each,fallback,children})=>{if(!each?.length)return fallback??React.createElement(React.Fragment,null);let elements=[];for(let i=0;i<each.length;i++)elements[i]=children(each[i],i);return React.createElement(React.Fragment,null,elements)});const ForEachOptimized_ForEachOptimized=({each,exec,fallback})=>{if(!each?.length)return fallback??React.createElement(React.Fragment,null);let elements=[];for(let i=0;i<each.length;i++)elements[i]=exec(each[i],i);return elements}\n;// CONCATENATED MODULE: ./src/renderer/components/sections/SideBar.tsx\nconst SideBar_join=(0,Utilities/* cjoin */.hI)(\'sidebar\');const[SideBar_FormTitle,DragHooks,SideBar_ButtonColors,SideBar_ModalActions,ContextMenuActions]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormTitle\'),Webpack/* Filters.byProps */.x.byProps(\'DropTarget\',\'useDrop\'),Webpack/* Filters.byProps */.x.byProps(\'dangerous\',\'selected\'),Webpack/* Filters.byProps */.x.byProps(\'closeModal\'),Webpack/* Filters.byProps */.x.byProps(\'openContextMenuLazy\'));const{Icon: SideBar_Icon,Tooltip: SideBar_Tooltip,ContextMenu,BarlessScroller}=Webpack/* default.components */.Z.components;/* harmony default export */ const SideBar = (({states})=>{const{LEFT,RIGHT}=SideBar_Icon.Caret.Directions;const{button}=SideBar_ButtonColors;const draggingRef=React.useRef(false);const setDragging=value=>{draggingRef.current=value.type===\'mousedown\'};React.useEffect(()=>{document.addEventListener(\'mousedown\',setDragging);document.addEventListener(\'mouseup\',setDragging);return()=>{document.removeEventListener(\'mousedown\',setDragging);document.removeEventListener(\'mouseup\',setDragging)}},[]);const setCurrentSnippet=states.currentSnippet[1];const[collapsed,toggleCollapsed]=states.collapsedState;return React.createElement("div",{className:SideBar_join(\'container\',collapsed?\'collapsed\':\'expanded\')},React.createElement("div",{className:SideBar_join(\'topbar\')},collapsed||React.createElement(SideBar_FormTitle,{tag:"h3"},"Snippets"),collapsed||React.createElement("div",{className:button,onClick:()=>{SideBar_ModalActions.openModal(event=>{return React.createElement(UserInput,{event:event,action:input=>{const[name,extension]=input.split(\'.\');Manager["default"].createSnippet(name,extension);setCurrentSnippet(name)},options:{buttonText:\'Create Snippet\',placeholder:\'Block All Astra Users.ts\',headerText:\'psst you can use typescript and jsx!\',titleText:\'Create Snippet (include the extension)\',rejectFilter:input=>{if(Manager["default"].getSnippets()[input.split(\'.\')?.[0]])return\'A snippet with that name is already saved!\';if(!Utilities/* extensions.some */.Rw.some(ext=>input.toLowerCase().endsWith(`.${ext}`)))return\'Must have a valid extension.\'}}})})}},React.createElement(SideBar_Icon.Plus,{height:"20",width:"20"})),React.createElement("div",{className:button,onClick:toggleCollapsed},React.createElement(SideBar_Icon.Caret,{height:"20",width:"20",direction:collapsed?RIGHT:LEFT}))),React.createElement("div",{className:SideBar_join(\'divider\')}),React.createElement("div",{className:SideBar_join([\'tab\',\'list\'])},React.createElement(BarlessScroller,null,React.createElement(ForEachOptimized,{each:Object.keys(Manager["default"].getSnippets())},(snippet,index)=>React.createElement(TabItem,{index:index,snippet:snippet,collapsed:collapsed,draggingRef:draggingRef,state:states.currentSnippet,forceUpdate:states.forceUpdate})))))});const type=\'CODE_SNIPPETS_ITEM\';const{useDrag,useDrop}=DragHooks;const TabItem=({snippet:snippet1,state,index,forceUpdate,collapsed,draggingRef})=>{const[{dragIndex},drop]=useDrop({accept:type,drop:()=>({dropIndex:index}),collect:monitor=>{const snippet=monitor.getItem();return snippet&&monitor.isOver()?{dragIndex:snippet.index}:{dragIndex:null}}});const drag=useDrag({type,item:{snippet:snippet1,index},end:(_,monitor)=>{const{dropIndex}=monitor.getDropResult();Manager["default"].moveSnippet(snippet1,dropIndex)}})[1];const[tooltipVisible,setTooltipVisible]=React.useState(false);let timer;const mouseEnter=()=>{timer=setTimeout(()=>{if(!draggingRef.current)setTooltipVisible(true)},850)};const mouseLeave=()=>{setTooltipVisible(false);clearTimeout(timer)};const[currentSnippet,setCurrentSnippet]=state;return React.createElement(SideBar_Tooltip,{position:"top",shouldShow:tooltipVisible,text:`${snippet1}.${Manager["default"].getSnippet(snippet1).extension}`},React.createElement("div",{onMouseEnter:mouseEnter,onMouseLeave:mouseLeave,ref:node=>drag(drop(node||null)),onClick:()=>setCurrentSnippet(snippet1),onContextMenu:event=>TabItemContextMenu({event,state,snippet:snippet1,forceUpdate}),className:SideBar_join([\'tab\',\'item\'],dragIndex!==null&&dragIndex!==index?dragIndex>index?[\'tab\',\'item\',\'drag\',\'below\']:[\'tab\',\'item\',\'drag\',\'above\']:\'\',snippet1===currentSnippet?[\'tab\',\'item\',\'selected\']:\'\')},React.createElement(icons_Icon,{extension:Manager["default"].getSnippet(snippet1).extension}),collapsed||React.createElement("div",{className:SideBar_join([\'tab\',\'item\',\'text\'])},snippet1)))};const TabItemContextMenu=({event:event1,snippet,state,forceUpdate})=>{const[currentSnippet,setCurrentSnippet,lastSnippet]=state;ContextMenuActions.openContextMenu(event1,()=>React.createElement(ContextMenu.Container,{onClose:ContextMenuActions.closeContextMenu},React.createElement(ContextMenu.Item,{id:"rename",label:"Rename Snippet",action:()=>{SideBar_ModalActions.openModal(event=>{return React.createElement(UserInput,{event:event,action:input=>{console.log(input,\'inpust\');const[name,extension]=input.split(\'.\');if(extension&&Utilities/* extensions.includes */.Rw.includes(extension))Manager["default"].updateSnippet(snippet,{extension});if(name!==snippet)Manager["default"].renameSnippet(snippet,name);setCurrentSnippet(name)},options:{initialInput:snippet,titleText:\'Rename Snippet\',buttonText:\'Rename Snippet\',placeholder:\'Cute Girl Getter.ts\',headerText:\'By the way, you can change the extension!\',rejectFilter:input=>{const split=input.split(\'.\');if(snippet!==split[0]&&Manager["default"].getSnippets()[split[0]])return\'A snippet with that name is already saved!\';console.log(split[1],Utilities/* extensions.includes */.Rw.includes(split[1]));if(split[1]&&!Utilities/* extensions.includes */.Rw.includes(split[1]))return`${split[1]} is not a valid extension.`}}})})}}),React.createElement(ContextMenu.Item,{id:"close",color:"colorDanger",label:"Delete Snippet",action:()=>{SideBar_ModalActions.openModal(event=>{return React.createElement(DeleteConfirm,{event:event,action:()=>{Manager["default"].deleteSnippet(snippet);if(snippet===currentSnippet)return setCurrentSnippet(lastSnippet);forceUpdate()}})})}})))}\n;// CONCATENATED MODULE: ./src/renderer/components/modals/Information.tsx\nconst simpleDedent=([string])=>string.split(\'\\n\').map(str=>str.trim()).join(\'\\n\');const[Information_Button,FormText,Information_FormTitle,{AdvancedScrollerThin}]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byProps */.x.byProps(\'DropdownSizes\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormText\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormTitle\'),Webpack/* Filters.byProps */.x.byProps(\'AdvancedScrollerThin\'));const makeCodeBlock=Webpack/* default.getByProps */.Z.getByProps(\'parse\',\'parseTopic\').defaultRules.codeBlock.react;const{Modal: Information_Modal}=Webpack/* default.components */.Z.components;const Information_join=(0,Utilities/* cjoin */.hI)(\'modal-information\');/* harmony default export */ const Information = (({event})=>{return React.createElement(Information_Modal.Root,{transitionState:event.transitionState,size:Information_Modal.Sizes.LARGE},React.createElement(Information_Modal.Header,null,React.createElement(Information_FormTitle,{tag:"h3"},"information Modal"),React.createElement(Information_Modal.CloseButton,{onClick:event.onClose})),React.createElement("div",{style:{marginTop:\'10px\'}}),React.createElement(Information_Modal.Content,null,React.createElement(AdvancedScrollerThin,null,React.createElement(Information_FormTitle,{tag:"h2"},"Information For Developers"),React.createElement(FormText,{type:"description",style:{paddingBottom:\'6px\'}},"All snippets are run asynchronously, in the global scope, and with four predefined variables:",React.createElement("br",null),React.createElement("br",null),React.createElement("div",{className:Information_join(\'codeblock\')},makeCodeBlock({content:simpleDedent`\n                  let Logger  = window.cs.logger;\n                  let Patcher = window.cs.patcher;\n                  let Webpack = window.cs.webpack;\n                  let Manager = window.cs.manager;\n                `.trim(),lang:\'js\'},null,{})),React.createElement("br",null),"You can look at the source to find out how to use these or you can play with the Webpack and Patcher in the console by using the exposed \\"cs\\" variable.",React.createElement("br",null),React.createElement("br",null),"Of course if you don\'t want to use my patcher and/or webpack you can always redefine them like so:",React.createElement("br",null),React.createElement("br",null),React.createElement("div",{className:Information_join(\'codeblock\')},makeCodeBlock({content:\'Webpack = window.unbound.webpack;\',lang:\'js\'},null,{})),React.createElement("br",null),"Do note though that this requires the user to also have whatever plugin/package that defines said variable installed."),React.createElement(Information_FormTitle,{className:Information_join([\'pad\',\'title\'])},"Cleanup Functions"),React.createElement(FormText,{type:"description",style:{paddingBottom:\'6px\'}},"If a snippet returns a function it will be cached and will run on every snippet rerun or can be manually called with the cleanup button next to the rocket.",React.createElement("br",null),React.createElement("br",null),"If your snippet does anything that can be unpatched such as polluting global or patching a function please add one of these, not only does it make your life easier by unpatching subsequent reruns but it also lets the user unpatch it themself, they will also be run if the plugin unloaded.",React.createElement("br",null),React.createElement("br",null),React.createElement("div",{className:Information_join(\'codeblock\')},makeCodeBlock({content:`return () => { unpatch(); Logger.info(\'How about you unpatch some bitches?\'); };`,lang:\'js\'},null,{})),React.createElement("br",null),"If a type other than function is returned nothing will be cached and the return value will be displayed in console."))),React.createElement(Information_Modal.Footer,null,React.createElement(Information_Button,{onClick:()=>Manager["default"].backupSnippets(),size:Information_Button.Sizes.LARGE,color:Information_Button.Colors.GREEN},"Backup Snippets"),React.createElement(Information_Button,{onClick:event.onClose,look:Information_Button.Looks.LINK,color:Information_Button.Colors.TRANSPARENT},"Cancel")))});\n;// CONCATENATED MODULE: ./src/renderer/components/SettingsPanel.tsx\nconst[SettingsPanel_FormTitle,FormSection,SettingsPanel_ModalActions,StickerPicker,{keybind:keybindClass},]=Webpack/* default.bulk */.Z.bulk(Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormTitle\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'FormSection\'),Webpack/* Filters.byProps */.x.byProps(\'closeModal\'),Webpack/* Filters.byDisplayName */.x.byDisplayName(\'StickerPickerLoader\',true),Webpack/* Filters.byProps */.x.byProps(\'closeButtonBold\'));const{Tooltip: SettingsPanel_Tooltip,Icon: SettingsPanel_Icon}=Webpack/* default.components */.Z.components;/* harmony default export */ const SettingsPanel = (()=>{const editorRef=React.useRef();const unsavedState=React.useState(false);const collapsedState=React.useReducer(v=>!v,false);const forceUpdate=React.useReducer(()=>({}),{})[1];const currentSnippetState=React.useState(Manager["default"].getFirstSnippet());const[remountKey,remountMonaco]=React.useReducer(v=>!v,false);const lastSnippet=React.useRef(\'no snippets? :nobitches:\');const setCurrentSnippet=value=>{lastSnippet.current=currentSnippetState[0];currentSnippetState[1](value);unsavedState[1](false)};React.useEffect(()=>{const node=Manager["default"].injectCSS(`\n      .${keybindClass} { opacity: 0; }\n    `,\'keybind-hide\');return()=>node.remove()});React.useEffect(()=>{if(typeof StickerPicker?.default!==\'function\')return;return Patcher/* default.after */.Z.after(StickerPicker,\'default\',([args])=>args.closePopout())},[]);const currentSnippet=[currentSnippetState[0],setCurrentSnippet,lastSnippet.current];const states={editorRef,forceUpdate,unsavedState,remountMonaco,currentSnippet,collapsedState};Manager["default"].setUpdate(forceUpdate);return React.createElement(FormSection,null,React.createElement(SettingsPanel_FormTitle,{className:(0,Utilities/* pjoin */.As)([\'header\',\'title\']),tag:"h1"},"Code Snippets"),React.createElement(SettingsPanel_Tooltip,{className:(0,Utilities/* pjoin */.As)([\'header\',\'icon\',\'tooltip\']),text:"Information Modal",position:"top"},React.createElement("div",{className:(0,Utilities/* pjoin */.As)([\'header\',\'icon\']),onClick:()=>SettingsPanel_ModalActions.openModal(event=>React.createElement(Information,{event:event}))},React.createElement(SettingsPanel_Icon.Info,{height:"16",width:"16"}))),React.createElement("div",{className:(0,Utilities/* pjoin */.As)(\'container\')},React.createElement(SideBar,{states:states}),React.createElement("div",{className:(0,Utilities/* pjoin */.As)([\'editor\',\'container\'])},React.createElement(TopBar,{states:states}),React.createElement(Editor,{states:states,key:Number(remountKey)}))))});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ckIyQyxNQUFNLEVBQUMzQyxNQUFNLENBQUVBLE1BQU0sQ0FBRWUsR0FBRyxDQUFFekMsTUFBTSxDQUFDMlMsVUFBVSxNQUt4RCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvc2VjdGlvbnMvRWRpdG9yLnRzeD9mYTU2Iiwid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL2ljb25zL1NhdmUudHN4PzkxNGEiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvaWNvbnMvQ2xlYW4udHN4PzIwYWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvbW9kYWxzL1VzZXJJbnB1dC50c3g/NDk5MyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9tb2RhbHMvRGVsZXRlQ29uZmlybS50c3g/YTE5NyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9zZWN0aW9ucy9Ub3BCYXIudHN4P2JlOTEiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvaWNvbnMvVFMudHN4PzY5MGQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvaWNvbnMvSlMudHN4PzcxNjciLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvaWNvbnMvSlNYLnRzeD9lNWI4Iiwid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL2ljb25zL0NTUy50c3g/NTgxNiIsIndlYnBhY2s6Ly8vLi9zcmMvcmVuZGVyZXIvY29tcG9uZW50cy9pY29ucy9TQVNTLnRzeD9kZTA2Iiwid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL2ljb25zL0ljb24udHN4Pzc1MDAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvdXRpbGl0eS9Gb3JFYWNoT3B0aW1pemVkLnRzeD8yMjBmIiwid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL3NlY3Rpb25zL1NpZGVCYXIudHN4PzBhOTkiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlbmRlcmVyL2NvbXBvbmVudHMvbW9kYWxzL0luZm9ybWF0aW9uLnRzeD82NGYxIiwid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9jb21wb25lbnRzL1NldHRpbmdzUGFuZWwudHN4P2Y0NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhlIGJlbG93IHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIE1JVC4gKi9cblxuaW1wb3J0IFdlYnBhY2sgZnJvbSAnQG1vZHVsZXMvV2VicGFjayc7XG5pbXBvcnQgTWFuYWdlciBmcm9tICdAbW9kdWxlcy9NYW5hZ2VyJztcblxuaW1wb3J0ICogYXMgbW9uYWNvIGZyb20gJ21vbmFjby1lZGl0b3InO1xuXG5pbXBvcnQgeyBjam9pbiwgY2FsbEFyZ3MgfSBmcm9tICdAbW9kdWxlcy9VdGlsaXRpZXMnO1xuXG5jb25zdCBqb2luID0gY2pvaW4oJ2VkaXRvcicpO1xuXG5jb25zdCBTZXR0aW5nc1N0b3JlID0gV2VicGFjay5nZXRCeVByb3BzKCdnZXRGdWxsU3RhdGUnLCAnc2V0dGluZ3MnKTtcblxudHlwZSBSR0JBID0gW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcj9dO1xuXG4vLyBodHRwczovLzFsb2MuZGV2L21pc2MvY29udmVydC1yZ2ItY29sb3ItdG8taGV4L1xuY29uc3QgcmdiVG9IZXggPSAoW3JlZCwgZ3JlZW4sIGJsdWUsIGFscGhhXTogUkdCQSk6IHN0cmluZyA9PlxuICBgIyR7W3JlZCwgZ3JlZW4sIGJsdWUsIGFscGhhXVxuICAgIC5tYXAoKHYpID0+XG4gICAgICB2Py50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSlcbiAgICAuam9pbignJylcbiAgfWA7XG5cbmNvbnN0IHBhcnNlQ29sb3IgPSAoc3RyOiBzdHJpbmcpOiBSR0JBID0+IHtcbiAgY29uc3Qgc2hlZXQgPSBuZXcgQ1NTU3R5bGVTaGVldCgpIGFzIGFueTtcbiAgc2hlZXQucmVwbGFjZVN5bmMoYHRhcmdldCB7Y29sb3I6ICR7c3RyfX1gKTtcbiAgcmV0dXJuIHNoZWV0LmNzc1J1bGVzWzBdLnN0eWxlLmNvbG9yLm1hdGNoKC9bXFwuXFxkXSsvZykubWFwKE51bWJlcik7XG59O1xuXG5jb25zdCBnZXRWYWx1ZSA9ICh2YWx1ZTogc3RyaW5nKTogc3RyaW5nID0+XG4gIHJnYlRvSGV4KHBhcnNlQ29sb3IoYm9keS5nZXRQcm9wZXJ0eVZhbHVlKHZhbHVlKS50cmltKCkpKTtcblxubGV0IGJvZHk6IENTU1N0eWxlRGVjbGFyYXRpb247XG5jb25zdCBjcmVhdGVFZGl0b3JUaGVtZSA9ICgpID0+IHtcbiAgYm9keSA9IGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSk7XG5cbiAgY29uc3QgY29sb3JzID0ge1xuICAgIHRleHRDb2xvcjogZ2V0VmFsdWUoJy0tdGV4dC1ub3JtYWwnKSxcbiAgICBiZ0FjY2VudDogZ2V0VmFsdWUoJy0tYmFja2dyb3VuZC1hY2NlbnQnKSxcbiAgICBiZ0Zsb2F0aW5nOiBnZXRWYWx1ZSgnLS1iYWNrZ3JvdW5kLWZsb2F0aW5nJyksXG4gICAgYmdUZXJpdGFyeTogZ2V0VmFsdWUoJy0tYmFja2dyb3VuZC10ZXJ0aWFyeScpLFxuICB9O1xuXG4gIGNvbnN0IGxpZ2h0TW9kZSA9IFNldHRpbmdzU3RvcmUuc2V0dGluZ3MuYXBwZWFyYW5jZS50aGVtZSAtIDE7XG4gIG1vbmFjby5lZGl0b3IuZGVmaW5lVGhlbWUoJ2NvZGUtc25pcHBldHMnLCB7XG4gICAgaW5oZXJpdDogdHJ1ZSxcbiAgICBiYXNlOiBsaWdodE1vZGUgPyAndnMnIDogJ3ZzLWRhcmsnLFxuICAgIHJ1bGVzOiBbXG4gICAgICAvLyBAdHMtaWdub3JlIGJhY2tncm91bmQgb2Ygc2Nyb2xsYmFyXG4gICAgICB7IGJhY2tncm91bmQ6IGNvbG9ycy5iZ1Rlcml0YXJ5IH1cbiAgICBdLFxuICAgIGNvbG9yczoge1xuICAgICAgLyogVEhJUyBJUyBOT1QgRVZFTiBDTE9TRSBUTyBGVUxMWSBUSEVNRUQgKi9cbiAgICAgIC8qIElmIHNvbWVvbmUgd2FudHMgdG8gaGVscCBtZSB0aGVtZSB0aGlzIHBsZWFzZSBkbyBzbyEgKi9cbiAgICAgICdlZGl0b3IuYmFja2dyb3VuZCc6IGNvbG9ycy5iZ1Rlcml0YXJ5LFxuICAgICAgJ2VkaXRvckd1dHRlci5iYWNrZ3JvdW5kJzogY29sb3JzLmJnVGVyaXRhcnksXG4gICAgICAnZWRpdG9yTGluZU51bWJlci5mb3JlZ3JvdW5kJzogY29sb3JzLnRleHRDb2xvcixcbiAgICB9XG4gIH0pO1xufTtcblxuY29uc3QgcGFyc2VMYW5ndWFnZSA9IChleHRlbnNpb246IHN0cmluZykgPT4ge1xuICBpZiAoIWV4dGVuc2lvbikgcmV0dXJuICcnO1xuXG4gIHN3aXRjaCAoZXh0ZW5zaW9uKSB7XG4gICAgY2FzZSAnanMnOlxuICAgIGNhc2UgJ2pzeCc6XG4gICAgICByZXR1cm4gJ2phdmFzY3JpcHQnO1xuICAgIGNhc2UgJ3RzJzpcbiAgICAgIHJldHVybiAndHlwZXNjcmlwdCc7XG4gICAgY2FzZSAnc2Fzcyc6XG4gICAgICByZXR1cm4gJ3Njc3MnO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZXh0ZW5zaW9uO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoeyBzdGF0ZXMgfTogeyBzdGF0ZXM6IFN0YXRlczsgfSkgPT4ge1xuICBjb25zdCB7IGVkaXRvclJlZiB9ID0gc3RhdGVzO1xuXG4gIGNvbnN0IGJpbmRpbmdzID0gUmVhY3QudXNlUmVmKFtdKTtcbiAgY29uc3QgY29udGFpbmVyUmVmID0gUmVhY3QudXNlUmVmPGFueT4oKTtcbiAgY29uc3Qgc2V0VW5zYXZlZCA9IHN0YXRlcy51bnNhdmVkU3RhdGVbMV07XG5cbiAgY29uc3QgW2NvbGxhcHNlZF0gPSBzdGF0ZXMuY29sbGFwc2VkU3RhdGU7XG4gIGNvbnN0IFtjdXJyZW50U25pcHBldF0gPSBzdGF0ZXMuY3VycmVudFNuaXBwZXQ7XG5cbiAgY29uc3Qgb25LZXlQcmVzcyA9IChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgIGlmICghZWRpdG9yUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBpZiAoZXZlbnQuY3RybEtleSAmJiBldmVudC5rZXkgPT09ICdzJykge1xuICAgICAgY29uc3Qgc2NyaXB0VHlwZSA9IE1hbmFnZXIuZ2V0U2NyaXB0VHlwZShjdXJyZW50U25pcHBldCk7XG4gICAgICBjb25zdCBkaWRFcnJvciA9IE1hbmFnZXIudXBkYXRlU25pcHBldChjdXJyZW50U25pcHBldCwge1xuICAgICAgICBlbmFibGVkOiBzY3JpcHRUeXBlIHx8IE1hbmFnZXIuZ2V0U25pcHBldChjdXJyZW50U25pcHBldCkuZW5hYmxlZCxcbiAgICAgICAgY29kZTogZWRpdG9yUmVmLmN1cnJlbnQuZ2V0VmFsdWUoKSxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBVc2VyIGZlZWRiYWNrIGlzIGVwaWMgOilcbiAgICAgIGlmIChkaWRFcnJvcikgcmV0dXJuO1xuICAgICAgTWFuYWdlci5tYWtlVG9hc3QoYFN1Y2Nlc3NmdWxseSBzYXZlZCAke3NjcmlwdFR5cGUgPyAnJyA6ICdhbmQgbG9hZGVkJ30gc25pcHBldCAke2N1cnJlbnRTbmlwcGV0fSFgLCB0cnVlKTtcbiAgICAgIHNldFVuc2F2ZWQoZmFsc2UpO1xuXG4gICAgICAvLyBIb3QgUmVsb2FkIGZvciBDU1MgU25pcHBldHNcbiAgICAgIGlmICghc2NyaXB0VHlwZSkgcmV0dXJuO1xuICAgICAgTWFuYWdlci5ydW5TbmlwcGV0KGN1cnJlbnRTbmlwcGV0LCBNYW5hZ2VyLlNjcmlwdFR5cGUuQ1NTLCB0cnVlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gQ29tcG9uZW50IG1vdW50IGFuZCB1bm1vdW50XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cbiAgICAvLyBJbnRlbGxpc2Vuc2UgZm9yIHByZWRlZmluZWQgbW9kdWxlcy5cbiAgICBDb2RlU25pcHBldHNOYXRpdmUucmVhZERpcignZWRpdG9yLXR5cGVzJykuZm9yRWFjaCgobW9kdWxlKSA9PiB7XG4gICAgICBjb25zdCBjb250ZW50ID0gQ29kZVNuaXBwZXRzTmF0aXZlLnJlYWRGaWxlKGBlZGl0b3ItdHlwZXMvJHttb2R1bGV9YCk7XG4gICAgICBtb25hY28ubGFuZ3VhZ2VzLnR5cGVzY3JpcHQudHlwZXNjcmlwdERlZmF1bHRzLmFkZEV4dHJhTGliKGNvbnRlbnQpO1xuICAgICAgbW9uYWNvLmxhbmd1YWdlcy50eXBlc2NyaXB0LmphdmFzY3JpcHREZWZhdWx0cy5hZGRFeHRyYUxpYihjb250ZW50KTtcbiAgICB9KTtcblxuICAgIGNyZWF0ZUVkaXRvclRoZW1lKCk7XG4gIH0sIFtdKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY29udGFpbmVyUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIC8vIFR5cGVzY3JpcHQgUU9MIHNldHRpbmdzXG4gICAgbW9uYWNvLmxhbmd1YWdlcy50eXBlc2NyaXB0LnR5cGVzY3JpcHREZWZhdWx0cy5zZXREaWFnbm9zdGljc09wdGlvbnMoe1xuICAgICAgbm9TZW1hbnRpY1ZhbGlkYXRpb246IGZhbHNlLFxuICAgICAgbm9TeW50YXhWYWxpZGF0aW9uOiBmYWxzZSxcblxuICAgICAgLy8gSWdub3JlIGVycm9yIHNheWluZyB5b3UgY2FuJ3QgcmV0dXJuIG91dHNpZGUgb2YgYSBmdW5jdGlvbi5cbiAgICAgIC8vIChXZSdyZSBydW5uaW5nIHRoZSBjb2RlIGluIGEgZnVuY3Rpb24gYnV0IG1vbmFjbyBkb2Vzbid0IGtub3cgdGhhdClcbiAgICAgIGRpYWdub3N0aWNDb2Rlc1RvSWdub3JlOiBbMTEwOF1cbiAgICB9KTtcblxuICAgIGNvbnN0IEVkaXRvciA9IGVkaXRvclJlZi5jdXJyZW50ID0gbW9uYWNvLmVkaXRvci5jcmVhdGUoY29udGFpbmVyUmVmLmN1cnJlbnQsIHtcbiAgICAgIGF1dG9tYXRpY0xheW91dDogdHJ1ZSxcbiAgICAgIHRoZW1lOiAnY29kZS1zbmlwcGV0cycsXG4gICAgICB2YWx1ZTogTWFuYWdlci5nZXRTbmlwcGV0KGN1cnJlbnRTbmlwcGV0KS5jb2RlLFxuICAgICAgbGFuZ3VhZ2U6IHBhcnNlTGFuZ3VhZ2UoTWFuYWdlci5nZXRTbmlwcGV0KGN1cnJlbnRTbmlwcGV0KS5leHRlbnNpb24pLFxuICAgIH0pO1xuXG4gICAgLy8gRGV0ZWN0IFVuc2F2ZWRcbiAgICBiaW5kaW5ncy5jdXJyZW50LnB1c2goRWRpdG9yLm9uRGlkQ2hhbmdlTW9kZWxDb250ZW50KCgpID0+IHtcbiAgICAgIGlmIChFZGl0b3IuZ2V0VmFsdWUoKSAhPT0gTWFuYWdlci5nZXRTbmlwcGV0KGN1cnJlbnRTbmlwcGV0KS5jb2RlKVxuICAgICAgICByZXR1cm4gc2V0VW5zYXZlZCh0cnVlKTtcbiAgICAgIHNldFVuc2F2ZWQoZmFsc2UpO1xuICAgIH0pKTtcblxuICAgIC8vIERlYm91bmNlIFNhdmUgTWVjaGFuaWNcbiAgICBpZiAoTWFuYWdlci5nZXRTY3JpcHRUeXBlKGN1cnJlbnRTbmlwcGV0KSkge1xuICAgICAgY29uc3QgcmVzb2x2ZVRpbWVvdXQgPSAoKSA9PiB7XG4gICAgICAgIHRyYWNrZXIgPSAwO1xuICAgICAgICBNYW5hZ2VyLnVwZGF0ZVNuaXBwZXQoY3VycmVudFNuaXBwZXQsIHsgY29kZTogRWRpdG9yLmdldFZhbHVlKCkgfSk7XG5cbiAgICAgICAgaWYgKCFNYW5hZ2VyLmdldFNuaXBwZXQoY3VycmVudFNuaXBwZXQpLmVuYWJsZWQpIHJldHVybjtcbiAgICAgICAgTWFuYWdlci5ydW5TbmlwcGV0KGN1cnJlbnRTbmlwcGV0LCBNYW5hZ2VyLlNjcmlwdFR5cGUuQ1NTLCB0cnVlKTtcbiAgICAgIH07XG5cbiAgICAgIGxldCB0cmFja2VyOiBhbnk7XG4gICAgICBiaW5kaW5ncy5jdXJyZW50LnB1c2goRWRpdG9yLm9uRGlkQ2hhbmdlTW9kZWxDb250ZW50KCgpID0+IHtcbiAgICAgICAgaWYgKHRyYWNrZXIgIT09IDApIGNsZWFyVGltZW91dCh0cmFja2VyKTtcbiAgICAgICAgdHJhY2tlciA9IHNldFRpbWVvdXQocmVzb2x2ZVRpbWVvdXQsIDIwMCk7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgLy8gQ1RSTCArIFMgUmVnaXN0ZXJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25LZXlQcmVzcyk7XG5cbiAgICAvLyBQcmUtcmVyZW5kZXIgY2xlYW51cC5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgRWRpdG9yLmRpc3Bvc2UoKTtcbiAgICAgIGNhbGxBcmdzKGJpbmRpbmdzLmN1cnJlbnQsICdkaXNwb3NlJyk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25LZXlQcmVzcyk7XG4gICAgfTtcbiAgfSwgW2NvbnRhaW5lclJlZiwgZWRpdG9yUmVmLCBjdXJyZW50U25pcHBldF0pO1xuXG4gIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17am9pbignY29udGFpbmVyJywgY29sbGFwc2VkID8gJ2NvbGxhcHNlZCcgOiAnZXhwYW5kZWQnKX0gcmVmPXtjb250YWluZXJSZWZ9IC8+O1xufTtcbiIsIi8qIENvcHlyaWdodCAoYykgR29vZ2xlLCBBcGFjaGUgTGljZW5zZSAyLjAgKi9cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbygoKSA9PiAoXG4gIDxzdmcgdmlld0JveD0nMCAwIDI0IDI0JyB3aWR0aD0nMjAnIGhlaWdodD0nMjAnIGZpbGw9J2N1cnJlbnRDb2xvcic+XG4gICAgPHBhdGggZD0nTTAgMGgyNHYyNEgweicgZmlsbD0nbm9uZScgLz5cbiAgICA8cGF0aCBkPSdNMTcgM0g1Yy0xLjExIDAtMiAuOS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWN2wtNC00em0tNSAxNmMtMS42NiAwLTMtMS4zNC0zLTNzMS4zNC0zIDMtMyAzIDEuMzQgMyAzLTEuMzQgMy0zIDN6bTMtMTBINVY1aDEwdjR6JyAvPlxuICA8L3N2Zz5cbikpOyIsIi8qIENvcHlyaWdodCAoYykgR29vZ2xlLCBBcGFjaGUgTGljZW5zZSAyLjAgKi9cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbygoKSA9PiAoXG4gIDxzdmcgdmlld0JveD0nMCAwIDI0IDI0JyB3aWR0aD0nMjAnIGhlaWdodD0nMjAnIGZpbGw9J2N1cnJlbnRDb2xvcic+XG4gICAgPHBhdGggZD0nTTE2LDExaC0xVjNjMC0xLjEtMC45LTItMi0yaC0yQzkuOSwxLDksMS45LDksM3Y4SDhjLTIuNzYsMC01LDIuMjQtNSw1djdoMTh2LTdDMjEsMTMuMjQsMTguNzYsMTEsMTYsMTF6IE0xOSwyMWgtMnYtMyBjMC0wLjU1LTAuNDUtMS0xLTFzLTEsMC40NS0xLDF2M2gtMnYtM2MwLTAuNTUtMC40NS0xLTEtMXMtMSwwLjQ1LTEsMXYzSDl2LTNjMC0wLjU1LTAuNDUtMS0xLTFzLTEsMC40NS0xLDF2M0g1di01IGMwLTEuNjUsMS4zNS0zLDMtM2g4YzEuNjUsMCwzLDEuMzUsMywzVjIxeicgLz5cbiAgPC9zdmc+XG4pKTsiLCIvKiBUaGUgYmVsb3cgY29kZSBpcyBsaWNlbnNlZCB1bmRlciBNSVQuICovXG5cbmltcG9ydCBXZWJwYWNrLCB7IEZpbHRlcnMgfSBmcm9tICdAbW9kdWxlcy9XZWJwYWNrJztcblxuaW50ZXJmYWNlIFVzZXJJbnB1dFByb3BzIHtcbiAgYWN0aW9uOiBGdW5jdGlvbjtcbiAgZXZlbnQ6IE1vZGFsRXZlbnQ7XG4gIG9wdGlvbnM/OiB7XG4gICAgdGl0bGVUZXh0Pzogc3RyaW5nO1xuICAgIGhlYWRlclRleHQ/OiBzdHJpbmc7XG4gICAgYnV0dG9uVGV4dD86IHN0cmluZztcbiAgICBwbGFjZWhvbGRlcj86IHN0cmluZyxcbiAgICBpbml0aWFsSW5wdXQ/OiBzdHJpbmcsXG4gICAgcmVqZWN0RmlsdGVyPzogKGlucHV0OiBzdHJpbmcpID0+IHN0cmluZyB8IHZvaWQ7XG4gIH07XG59XG5cbmNvbnN0IFtcbiAgQnV0dG9uLFxuICBGb3JtSXRlbSxcbiAgRm9ybVRpdGxlLFxuICBUZXh0SW5wdXQsXG5dID0gV2VicGFjay5idWxrKFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ0Ryb3Bkb3duU2l6ZXMnKSxcbiAgRmlsdGVycy5ieURpc3BsYXlOYW1lKCdGb3JtSXRlbScpLFxuICBGaWx0ZXJzLmJ5RGlzcGxheU5hbWUoJ0Zvcm1UaXRsZScpLFxuICBGaWx0ZXJzLmJ5RGlzcGxheU5hbWUoJ1RleHRJbnB1dCcpLFxuKTtcblxuY29uc3QgeyBNb2RhbCB9ID0gV2VicGFjay5jb21wb25lbnRzO1xuXG5leHBvcnQgZGVmYXVsdCAoeyBldmVudCwgYWN0aW9uLCBvcHRpb25zIH06IFVzZXJJbnB1dFByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCBbaW5wdXQsIF9zZXRJbnB1dF0gPSBSZWFjdC51c2VTdGF0ZShvcHRpb25zPy5pbml0aWFsSW5wdXQgfHwgJycpO1xuICBjb25zdCBbcmVqZWN0TWVzc2FnZSwgc2V0UmVqZWN0TWVzc2FnZV0gPSBSZWFjdC51c2VTdGF0ZTxzdHJpbmc+KHVuZGVmaW5lZCk7XG5cbiAgLy8gc2hvdmUgc3RhdGUgaW50byBhbiBvYmplY3Qgc28gbWVtb2l6ZWQgZnVuY3MgY2FuIHJlYWQgaXRcbiAgY29uc3QgaW5wdXRSZWYgPSBSZWFjdC51c2VSZWYoKTtcbiAgY29uc3Qgc2V0SW5wdXQgPSAoZGF0YSkgPT4ge1xuICAgIGlucHV0UmVmLmN1cnJlbnQgPSBkYXRhO1xuICAgIF9zZXRJbnB1dChkYXRhKTtcbiAgfTtcblxuICBjb25zdCBydW5BY3Rpb24gPSAoKSA9PiB7XG4gICAgaWYgKG9wdGlvbnM/LnJlamVjdEZpbHRlcikge1xuICAgICAgY29uc3QgcmVqZWN0ID0gb3B0aW9ucy5yZWplY3RGaWx0ZXIoaW5wdXRSZWYuY3VycmVudCk7XG4gICAgICBpZiAocmVqZWN0KSByZXR1cm4gc2V0UmVqZWN0TWVzc2FnZShyZWplY3QpO1xuICAgIH1cblxuICAgIGFjdGlvbihpbnB1dFJlZi5jdXJyZW50KTtcbiAgICBldmVudC5vbkNsb3NlKCk7XG4gIH07XG5cbiAgY29uc3Qgb25FbnRlciA9IChrZXlQcmVzc0V2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAga2V5UHJlc3NFdmVudC5rZXkgPT09ICdFbnRlcicgJiYgcnVuQWN0aW9uKCk7XG4gIH07XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgb25FbnRlcik7XG4gICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbkVudGVyKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsLlJvb3QgdHJhbnNpdGlvblN0YXRlPXtldmVudC50cmFuc2l0aW9uU3RhdGV9IHNpemU9e01vZGFsLlNpemVzLlNNQUxMfT5cbiAgICAgIDxNb2RhbC5IZWFkZXI+XG4gICAgICAgIDxGb3JtVGl0bGUgdGFnPSdoMyc+e29wdGlvbnM/LnRpdGxlVGV4dCB8fCAnSW5wdXQgTW9kYWwnfTwvRm9ybVRpdGxlPlxuICAgICAgICA8TW9kYWwuQ2xvc2VCdXR0b24gb25DbGljaz17ZXZlbnQub25DbG9zZX0gLz5cbiAgICAgIDwvTW9kYWwuSGVhZGVyPlxuICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICcxMHB4JyB9fSAvPlxuICAgICAgPE1vZGFsLkNvbnRlbnQ+XG4gICAgICAgIDxGb3JtSXRlbVxuICAgICAgICAgIGVycm9yPXtyZWplY3RNZXNzYWdlfVxuICAgICAgICAgIHRpdGxlPXtvcHRpb25zPy5oZWFkZXJUZXh0IHx8ICdJbnB1dCBUZXh0J30gPlxuICAgICAgICAgIDxUZXh0SW5wdXRcbiAgICAgICAgICAgIHZhbHVlPXtpbnB1dH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXRJbnB1dH1cbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogJzEwcHgnIH19XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj17b3B0aW9ucz8ucGxhY2Vob2xkZXIgfHwgJ3JhcGUgTE1BTyd9IC8+XG4gICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICA8L01vZGFsLkNvbnRlbnQ+XG4gICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgb25DbGljaz17cnVuQWN0aW9ufVxuICAgICAgICAgIGNvbG9yPXtCdXR0b24uQ29sb3JzLkdSRUVOfT5cbiAgICAgICAgICB7b3B0aW9ucz8uYnV0dG9uVGV4dCB8fCAnU3VibWl0J31cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICBvbkNsaWNrPXtldmVudC5vbkNsb3NlfVxuICAgICAgICAgIGxvb2s9e0J1dHRvbi5Mb29rcy5MSU5LfVxuICAgICAgICAgIGNvbG9yPXtCdXR0b24uQ29sb3JzLlRSQU5TUEFSRU5UfT5cbiAgICAgICAgICBDYW5jZWxcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICA8L01vZGFsLlJvb3Q+XG4gICk7XG59OyIsIi8qIFRoZSBiZWxvdyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciBNSVQuICovXG5cbmltcG9ydCBXZWJwYWNrLCB7IEZpbHRlcnMgfSBmcm9tICdAbW9kdWxlcy9XZWJwYWNrJztcblxuaW1wb3J0IHsgY2pvaW4gfSBmcm9tICdAbW9kdWxlcy9VdGlsaXRpZXMnO1xuXG5jb25zdCB7IE1vZGFsIH0gPSBXZWJwYWNrLmNvbXBvbmVudHM7XG5jb25zdCBbVGV4dCwgQnV0dG9uXSA9IFdlYnBhY2suYnVsayhcbiAgRmlsdGVycy5ieURpc3BsYXlOYW1lKCdMZWdhY3lUZXh0JyksXG4gIEZpbHRlcnMuYnlQcm9wcygnRHJvcGRvd25TaXplcycpLFxuKTtcblxuaW50ZXJmYWNlIERlbGV0ZUNvbmZpcm1Qcm9wcyB7XG4gIGV2ZW50OiBNb2RhbEV2ZW50O1xuICBhY3Rpb246IEZ1bmN0aW9uO1xufVxuXG5jb25zdCBqb2luID0gY2pvaW4oJ21vZGFsLWRlbGV0ZScpO1xuXG5leHBvcnQgZGVmYXVsdCAoeyBldmVudCwgYWN0aW9uIH06IERlbGV0ZUNvbmZpcm1Qcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxNb2RhbC5Sb290IHNpemU9e01vZGFsLlNpemVzLlNNQUxMfSB0cmFuc2l0aW9uU3RhdGU9e2V2ZW50LnRyYW5zaXRpb25TdGF0ZX0+XG4gICAgICA8TW9kYWwuQ29udGVudCBjbGFzc05hbWU9e2pvaW4oJ2NvbnRlbnQnKX0+XG4gICAgICAgIDxNb2RhbC5DbG9zZUJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e2V2ZW50Lm9uQ2xvc2V9XG4gICAgICAgICAgY2xhc3NOYW1lPXtqb2luKCdjbG9zZWJ1dHRvbicpfSAvPlxuICAgICAgICA8VGV4dFxuICAgICAgICAgIHNpemU9e1RleHQuU2l6ZXMuU0laRV8yNH1cbiAgICAgICAgICBjbGFzc05hbWU9e2pvaW4oJ3RpdGxlJyl9XG4gICAgICAgICAgY29sb3I9e1RleHQuQ29sb3JzLkhFQURFUl9QUklNQVJZfT5cbiAgICAgICAgICBUaGlzIGFjdGlvbiBpcyBpcnJldmVyc2libGUuXG4gICAgICAgIDwvVGV4dD5cbiAgICAgICAgPFRleHRcbiAgICAgICAgICBzaXplPXtUZXh0LlNpemVzLlNJWkVfMTZ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtqb2luKCdzdWJ0aXRsZScpfVxuICAgICAgICAgIGNvbG9yPXtUZXh0LkNvbG9ycy5IRUFERVJfU0VDT05EQVJZfT5cbiAgICAgICAgICBPbmx5IGNsaWNrIHRoZSBiZWxvdyBidXR0b24gaWYgeW91IGFyZSBhYnNvbHV0ZWx5IHN1cmUuXG4gICAgICAgIDwvVGV4dD5cbiAgICAgIDwvTW9kYWwuQ29udGVudD5cbiAgICAgIDxNb2RhbC5Gb290ZXI+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICBzaXplPXtCdXR0b24uU2l6ZXMuTEFSR0V9XG4gICAgICAgICAgY29sb3I9e0J1dHRvbi5Db2xvcnMuUkVEfVxuICAgICAgICAgIGNsYXNzTmFtZT17am9pbignYnV0dG9uJyl9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgYWN0aW9uKCk7XG4gICAgICAgICAgICBldmVudC5vbkNsb3NlKCk7XG4gICAgICAgICAgfX0+XG4gICAgICAgICAgRGVsZXRlIGl0LlxuICAgICAgICA8L0J1dHRvbj5cbiAgICAgIDwvTW9kYWwuRm9vdGVyPlxuICAgIDwvTW9kYWwuUm9vdD5cbiAgKTtcbn07XG4iLCIvKiBUaGUgYmVsb3cgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgTUlULiAqL1xuXG5pbXBvcnQgTWFuYWdlciBmcm9tICdAbW9kdWxlcy9NYW5hZ2VyJztcbmltcG9ydCBXZWJwYWNrLCB7IEZpbHRlcnMgfSBmcm9tICdAbW9kdWxlcy9XZWJwYWNrJztcblxuaW1wb3J0IHsgY2pvaW4sIGpvaW4sIHNsZWVwIH0gZnJvbSAnQG1vZHVsZXMvVXRpbGl0aWVzJztcblxuaW1wb3J0IFNhdmVJY29uIGZyb20gJ0Bjb21wb25lbnRzL2ljb25zL1NhdmUnO1xuaW1wb3J0IENsZWFuSWNvbiBmcm9tICdAY29tcG9uZW50cy9pY29ucy9DbGVhbic7XG5pbXBvcnQgVXNlcklucHV0IGZyb20gJ0Bjb21wb25lbnRzL21vZGFscy9Vc2VySW5wdXQnO1xuaW1wb3J0IERlbGV0ZUNvbmZpcm0gZnJvbSAnQGNvbXBvbmVudHMvbW9kYWxzL0RlbGV0ZUNvbmZpcm0nO1xuXG5jb25zdCBwam9pbiA9IGNqb2luKCd0b3BiYXInKTtcblxuY29uc3QgW1xuICBTd2l0Y2gsXG4gIEZvcm1UaXRsZSxcbiAgQnV0dG9uQ29sb3JzLFxuICBNb2RhbEFjdGlvbnMsXG5dID0gV2VicGFjay5idWxrKFxuICBGaWx0ZXJzLmJ5RGlzcGxheU5hbWUoJ1N3aXRjaCcpLFxuICBGaWx0ZXJzLmJ5RGlzcGxheU5hbWUoJ0Zvcm1UaXRsZScpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ2Rhbmdlcm91cycsICdzZWxlY3RlZCcpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ2Nsb3NlTW9kYWwnKSxcbik7XG5cbmNvbnN0IHsgSWNvbiwgVG9vbHRpcCB9ID0gV2VicGFjay5jb21wb25lbnRzO1xuY29uc3QgeyBidXR0b24sIGRhbmdlcm91cywgZGlzYWJsZWQgfSA9IEJ1dHRvbkNvbG9ycztcblxuZXhwb3J0IGRlZmF1bHQgKHsgc3RhdGVzIH06IHsgc3RhdGVzOiBTdGF0ZXM7IH0pID0+IHtcbiAgY29uc3QgZWRpdG9yID0gc3RhdGVzLmVkaXRvclJlZi5jdXJyZW50O1xuXG4gIGNvbnN0IFtjb2xsYXBzZWRdID0gc3RhdGVzLmNvbGxhcHNlZFN0YXRlO1xuICBjb25zdCBbdW5zYXZlZCwgc2V0VW5zYXZlZF0gPSBzdGF0ZXMudW5zYXZlZFN0YXRlO1xuICBjb25zdCBbY3VycmVudFNuaXBwZXQsIHNldEN1cnJlbnRTbmlwcGV0LCBsYXN0U25pcHBldF0gPSBzdGF0ZXMuY3VycmVudFNuaXBwZXQ7XG5cbiAgY29uc3Qgc25pcHBldCA9IE1hbmFnZXIuZ2V0U25pcHBldChjdXJyZW50U25pcHBldCk7XG4gIGNvbnN0IHNjcmlwdFR5cGUgPSBNYW5hZ2VyLmdldFNjcmlwdFR5cGUoY3VycmVudFNuaXBwZXQpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtwam9pbignY29udGFpbmVyJywgY29sbGFwc2VkID8gJ2NvbGxhcHNlZCcgOiAnZXhwYW5kZWQnKX0+XG4gICAgICB7LyogVHlwZSBhYnVzZSwgU2NyaXB0VHlwZS5KUyBpcyBcIjBcIiAqL31cbiAgICAgIHshQm9vbGVhbihzY3JpcHRUeXBlKSA/XG4gICAgICAgIDxUb29sdGlwIHBvc2l0aW9uPSd0b3AnIHRleHQ9J0NsaWNrIG1lIHRvIHJ1biB0aGUgY29kZSEnPlxuICAgICAgICAgIDxGb3JtVGl0bGVcbiAgICAgICAgICAgIHRhZz0naDMnIGNsYXNzTmFtZT17cGpvaW4oJ2pzdGl0bGUnKX1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IE1hbmFnZXIucnVuU25pcHBldChjdXJyZW50U25pcHBldCwgc2NyaXB0VHlwZSl9PlxuICAgICAgICAgICAge2N1cnJlbnRTbmlwcGV0fVxuICAgICAgICAgIDwvRm9ybVRpdGxlPlxuICAgICAgICA8L1Rvb2x0aXA+IDpcbiAgICAgICAgPEZvcm1UaXRsZSB0YWc9J2gzJz5cbiAgICAgICAgICB7Y3VycmVudFNuaXBwZXR9XG4gICAgICAgIDwvRm9ybVRpdGxlPn1cbiAgICAgIDxkaXYgc3R5bGU9e3sgZmxleDogJ2F1dG8nIH19IC8+XG4gICAgICB7dW5zYXZlZCAmJiAhQm9vbGVhbihzY3JpcHRUeXBlKSA/XG4gICAgICAgIDxUb29sdGlwIHBvc2l0aW9uPSd0b3AnIHRleHQ9J1lvdSBjYW4gcHJlc3MgQ1RSTCArIFMhJz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YnV0dG9ufSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkaWRFcnJvciA9IE1hbmFnZXIudXBkYXRlU25pcHBldChjdXJyZW50U25pcHBldCwgeyBjb2RlOiBlZGl0b3IuZ2V0VmFsdWUoKSB9KTtcblxuICAgICAgICAgICAgaWYgKGRpZEVycm9yKSByZXR1cm47XG4gICAgICAgICAgICBNYW5hZ2VyLm1ha2VUb2FzdChgU3VjY2Vzc2Z1bGx5IHNhdmVkIHNuaXBwZXQgJHtjdXJyZW50U25pcHBldH0hYCwgdHJ1ZSk7XG5cbiAgICAgICAgICAgIHNldFVuc2F2ZWQoZmFsc2UpO1xuICAgICAgICAgIH19PlxuICAgICAgICAgICAgPFNhdmVJY29uIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVG9vbHRpcD4gOiBudWxsfVxuICAgICAgeyFCb29sZWFuKHNjcmlwdFR5cGUpICYmIE1hbmFnZXIuY2xlYW51cHNbY3VycmVudFNuaXBwZXRdID9cbiAgICAgICAgPFRvb2x0aXAgcG9zaXRpb249J3RvcCcgdGV4dD17IUJvb2xlYW4oc2NyaXB0VHlwZSkgPyAnUnVuIFJldHVybiBGdW5jdGlvbicgOiAnUmVtb3ZlIENTUyd9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtidXR0b259IG9uQ2xpY2s9eygpID0+IE1hbmFnZXIuY2xlYW51cHNbY3VycmVudFNuaXBwZXRdKCl9PlxuICAgICAgICAgICAgPENsZWFuSWNvbiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1Rvb2x0aXA+IDogbnVsbH1cbiAgICAgIHshQm9vbGVhbihzY3JpcHRUeXBlKSB8fFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17cGpvaW4oJ3N3aXRjaCcpfT5cbiAgICAgICAgICA8U3dpdGNoXG4gICAgICAgICAgICBjaGVja2VkPXtzbmlwcGV0LmVuYWJsZWR9IGNsYXNzTmFtZT17cGpvaW4oJ3N3aXRjaCcpfVxuICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBkaWRFcnJvciA9IE1hbmFnZXIudXBkYXRlU25pcHBldChjdXJyZW50U25pcHBldCwgeyBlbmFibGVkOiB2YWx1ZSB9KTtcblxuICAgICAgICAgICAgICBpZiAoZGlkRXJyb3IpIHJldHVybjtcblxuICAgICAgICAgICAgICBpZiAoIXZhbHVlKSByZXR1cm4gTWFuYWdlci5jbGVhbnVwc1tjdXJyZW50U25pcHBldF0/LigpO1xuICAgICAgICAgICAgICBNYW5hZ2VyLnJ1blNuaXBwZXQoY3VycmVudFNuaXBwZXQsIE1hbmFnZXIuU2NyaXB0VHlwZS5DU1MsIHRydWUpO1xuICAgICAgICAgICAgICBNYW5hZ2VyLm1ha2VUb2FzdChgU3VjY2Vzc2Z1bGx5IHNhdmVkIGFuZCBsb2FkZWQgc25pcHBldCAke2N1cnJlbnRTbmlwcGV0fSFgLCB0cnVlKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+fVxuICAgICAge3NuaXBwZXQuZ2lzdCA/IDxUb29sdGlwIHBvc2l0aW9uPSd0b3AnIHRleHQ9J1B1bGwgc25pcHBldCBmcm9tIEdpdGh1Yic+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2J1dHRvbn1cbiAgICAgICAgICBvbkNsaWNrPXthc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb2RlID0gYXdhaXQgTWFuYWdlci5wdWxsR2lzdChzbmlwcGV0Lmdpc3QpLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICBNYW5hZ2VyLm1ha2VUb2FzdCgnRmFpbGVkIHRvIHB1bGwgc25pcHBldCBmcm9tIEdpdGh1YiEnLCBmYWxzZSk7XG4gICAgICAgICAgICAgIExvZ2dlci5lcnJvcignRmFpbGVkIHRvIHB1bGwgc25pcHBldCBmcm9tIEdpdGh1YiEnLCBlcnJvcik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGNvZGUpIE1hbmFnZXIudXBkYXRlU25pcHBldChjdXJyZW50U25pcHBldCwgeyBjb2RlIH0pO1xuXG4gICAgICAgICAgICAvLyBSZWZyZXNoIHRoZSB0ZXh0YXJlYVxuICAgICAgICAgICAgc3RhdGVzLnJlbW91bnRNb25hY28oKTtcbiAgICAgICAgICB9fT5cbiAgICAgICAgICA8SWNvbi5QdWxsIGhlaWdodD0nMjAnIHdpZHRoPScyMCcgLz5cbiAgICAgICAgPC9kaXY+PC9Ub29sdGlwPiA6IDxUb29sdGlwIHBvc2l0aW9uPSd0b3AnIHRleHQ9J0Nvbm5lY3QgdG8gR2l0aHViIEdpc3QnPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtidXR0b259XG4gICAgICAgICAgb25DbGljaz17YXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWQgPSBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgTW9kYWxBY3Rpb25zLm9wZW5Nb2RhbCgoZXZlbnQ6IE1vZGFsRXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPFVzZXJJbnB1dCBldmVudD17ZXZlbnR9IGFjdGlvbj17cmVzb2x2ZX0gb3B0aW9ucz17e1xuICAgICAgICAgICAgICAgICAgYnV0dG9uVGV4dDogJ1NhdmUgSUQnLFxuICAgICAgICAgICAgICAgICAgdGl0bGVUZXh0OiAnR2l0aHViIEdpc3QgSUQnLFxuICAgICAgICAgICAgICAgICAgaGVhZGVyVGV4dDogJ0VudGVyIHRoZSBJRCBvZiB0aGUgZ2lzdCB5b3Ugd2FudCB0byBwdWxsIGZyb20nLFxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdhZWM5M2U3ZDQ2ZTA0MWU1YzM3ZjNkMjViY2JlZTIwYycsXG4gICAgICAgICAgICAgICAgICByZWplY3RGaWx0ZXI6IChpbnB1dDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghL15bMC05YS1mXXszMn0kLy50ZXN0KGlucHV0KSkgcmV0dXJuICdJbnZhbGlkIElEISc7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfX0gLz47XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIHdhaXQgb25lIHRpY2sgZm9yIG1vZGFsIHRvIGNsb3NlLlxuICAgICAgICAgICAgYXdhaXQgc2xlZXAoNCk7XG5cbiAgICAgICAgICAgIE1vZGFsQWN0aW9ucy5vcGVuTW9kYWwoKGV2ZW50OiBNb2RhbEV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiA8VXNlcklucHV0IGV2ZW50PXtldmVudH0gYWN0aW9uPXsobmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgTWFuYWdlci51cGRhdGVTbmlwcGV0KGN1cnJlbnRTbmlwcGV0LCB7IGdpc3Q6IHsgaWQsIG5hbWUgfSB9KTtcbiAgICAgICAgICAgICAgfX0gb3B0aW9ucz17e1xuICAgICAgICAgICAgICAgIGJ1dHRvblRleHQ6ICdTYXZlIE5hbWUnLFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAnS2V5d29yZCBTZWFyY2gudHMnLFxuICAgICAgICAgICAgICAgIHRpdGxlVGV4dDogJ0dpdGh1YiBHaXN0IEZpbGUgTmFtZSAoaWYgaXRcXCdzIGJsYW5rIGl0XFwnbGwgY2hvb3NlIHRoZSBmaXJzdCBmaWxlKScsXG4gICAgICAgICAgICAgICAgaGVhZGVyVGV4dDogJ0VudGVyIHRoZSBuYW1lIG9mIGZpbGUgaW4gdGhlIGdpc3QgKG9yIG5vdGhpbmcgaWYgdGhlIGdpc3Qgb25seSBoYXMgb25lIGZpbGUpJyxcbiAgICAgICAgICAgICAgfX0gLz47XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9fT5cbiAgICAgICAgICA8SWNvbi5MaW5rIGhlaWdodD0nMjAnIHdpZHRoPScyMCcgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L1Rvb2x0aXA+fVxuICAgICAge0Jvb2xlYW4oc2NyaXB0VHlwZSkgfHxcbiAgICAgICAgPFRvb2x0aXAgcG9zaXRpb249J3RvcCcgdGV4dD17YCR7IXNuaXBwZXQuZW5hYmxlZCA/ICdUdXJuIG9uJyA6ICdUdXJuIG9mZid9IFJ1biBvbiBTdGFydHVwYH0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2J1dHRvbn0gJHshc25pcHBldC5lbmFibGVkID8gam9pbihkaXNhYmxlZCwgcGpvaW4oJ3JvY2tldCcpKSA6ICcnfWB9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBNYW5hZ2VyLnVwZGF0ZVNuaXBwZXQoY3VycmVudFNuaXBwZXQsIHsgZW5hYmxlZDogIXNuaXBwZXQuZW5hYmxlZCB9KX0+XG4gICAgICAgICAgICA8SWNvbi5Sb2NrZXQgaGVpZ2h0PScyMCcgd2lkdGg9JzIwJyAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1Rvb2x0aXA+fVxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2pvaW4oYnV0dG9uLCBkYW5nZXJvdXMpfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgTW9kYWxBY3Rpb25zLm9wZW5Nb2RhbCgoZXZlbnQ6IE1vZGFsRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiA8RGVsZXRlQ29uZmlybSBldmVudD17ZXZlbnR9IGFjdGlvbj17KCkgPT4ge1xuICAgICAgICAgICAgICBNYW5hZ2VyLmRlbGV0ZVNuaXBwZXQoY3VycmVudFNuaXBwZXQpO1xuICAgICAgICAgICAgICBzZXRDdXJyZW50U25pcHBldChsYXN0U25pcHBldCk7XG4gICAgICAgICAgICB9fSAvPjtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfX0+XG4gICAgICAgIDxJY29uLlRyYXNoIGhlaWdodD0nMjAnIHdpZHRoPScyMCcgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2ID5cbiAgKTtcbn07IiwiZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbygoKSA9PiAoXG4gIDxzdmcgd2lkdGg9JzIwJyBoZWlnaHQ9JzIwJyB2aWV3Qm94PScwIDAgMjQgMjQnIGZpbGw9J25vbmUnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zyc+XG4gICAgPHBhdGggZmlsbD0nIzMxNzhDNicgZmlsbC1ydWxlPSdldmVub2RkJyBjbGlwLXJ1bGU9J2V2ZW5vZGQnIGQ9J00xMy4xNjgyIDE0LjY2ODFWMTcuMDExOUMxMy41NDc4IDE3LjIwODggMTQuMDExOSAxNy4zNTQxIDE0LjUyNzUgMTcuNDUyNUMxNS4wNDMyIDE3LjU1MDkgMTUuNjA1NyAxNy41OTc4IDE2LjE2ODIgMTcuNTk3OEMxNi43MzA3IDE3LjU5NzggMTcuMjQ2MyAxNy41NDYzIDE3Ljc2MTkgMTcuNDM4NEMxOC4yNzc1IDE3LjMzMDYgMTguNjk5NCAxNy4xNTI1IDE5LjA3NDQgMTYuOTIyOEMxOS40NTQxIDE2LjY3NDQgMTkuNzc3NSAxNi4zNjAzIDE5Ljk2NSAxNS45Mzg0QzIwLjE1MjUgMTUuNTE2NiAyMC4yOTc4IDE1LjA0NzggMjAuMjk3OCAxNC40Mzg0QzIwLjI5NzggMTQuMDExOSAyMC4yMzIyIDEzLjY0MTYgMjAuMTA1NyAxMy4zMTM0QzE5Ljk3OTEgMTIuOTg1MyAxOS43OTYzIDEyLjcwNDEgMTkuNTQzMiAxMi40Njk3QzE5LjMwNDEgMTIuMjIxMyAxOS4wMjc1IDEyLjAwMDkgMTguNjk5NCAxMS44MTM0QzE4LjM3MTMgMTEuNjI1OSAxNy45OTYzIDExLjQyOTEgMTcuNTc0NCAxMS4yNTA5QzE3LjI2NSAxMS4xMjQ0IDE3LjAxMTkgMTEuMDAyNSAxNi43MzA3IDEwLjg4MDZDMTYuNDg2OSAxMC43NTg4IDE2LjI3NiAxMC42MzY5IDE2LjEyMTMgMTAuNTE1QzE1Ljk0NzggMTAuMzg4NCAxNS44MTY2IDEwLjI1NzIgMTUuNzIyOCAxMC4xMjEzQzE1LjYyOTEgOS45ODA2MyAxNS41ODIyIDkuODI1OTQgMTUuNTgyMiA5LjY1MjVDMTUuNTgyMiA5LjQ5MzEzIDE1LjYyMzkgOS4zNDc4MSAxNS43MDg4IDkuMjE2NTZDMTUuNzkzNiA5LjA4NTMxIDE1LjkxMDMgOC45Nzc1IDE2LjA2MDMgOC44ODM3NUMxNi4yMTAzIDguNzkgMTYuMzk3OCA4LjcxOTY5IDE2LjYyMjggOC42NjgxM0MxNi44NDMyIDguNjE2NTYgMTcuMDg2OSA4LjU5MzEzIDE3LjM3MjggOC41OTMxM0MxNy41Njk3IDguNTkzMTMgMTcuNzc2IDguNjA3NjYgMTcuOTgyMiA4LjYzNzE5QzE4LjE5NzggOC42NjY3MiAxOC40MTgyIDguNzEyMTkgMTguNjM4NSA4Ljc3MzEzQzE4Ljg1ODggOC44MzQwNiAxOS4wNzQ0IDguOTA5MDYgMTkuMjk0NyA5LjAwMjgxQzE5LjUwMSA5LjA5NjU2IDE5LjY5MzIgOS4yMDQzOCAxOS44NTcyIDkuMzI2MjVWNy4xMjMxM0MxOS41MDEgNi45ODcxOSAxOS4xMDcyIDYuODg0MDYgMTguNjg1MyA2LjgxODQ0QzE4LjI2MzUgNi43NTI4MSAxNy43OTQ3IDYuNzIgMTcuMjMyMiA2LjcyQzE2LjY2OTcgNi43MiAxNi4xNTQxIDYuNzgwOTQgMTUuNjM4NSA2Ljg5ODEzQzE1LjEyMjggNy4wMTUzMSAxNC43MDEgNy4yMDI4MSAxNC4zMjYgNy40NjA2M0MxMy45NDYzIDcuNzEzNzUgMTMuNjY5NyA4LjAyMzEzIDEzLjQzNTMgOC40NDVDMTMuMjE1IDguODM4NzUgMTMuMTA3MiA5LjI4ODc1IDEzLjEwNzIgOS44NTEyNUMxMy4xMDcyIDEwLjU1NDQgMTMuMzA4OCAxMS4xNjM4IDEzLjcxNjYgMTEuNjMyNUMxNC4xMTk3IDEyLjE0ODEgMTQuNzQ3OCAxMi41MjMxIDE1LjU0NDcgMTIuODk4MUMxNS44NjgyIDEzLjAyOTQgMTYuMTU0MSAxMy4xNjA2IDE2LjQzNTMgMTMuMjg3MkMxNi43MTY2IDEzLjQxMzggMTYuOTUxIDEzLjU0NSAxNy4xMzg1IDEzLjY4MDlDMTcuMzQgMTMuODE2OSAxNy40OTk0IDEzLjk2NjkgMTcuNjA3MiAxNC4xMjYzQzE3LjcyNDQgMTQuMjg1NiAxNy43ODUzIDE0LjQ3MzEgMTcuNzg1MyAxNC42ODg4QzE3Ljc4NTMgMTQuODM4OCAxNy43NDg4IDE0Ljk3OTQgMTcuNjc3NSAxNS4xMTA2QzE3LjYwNjMgMTUuMjQxOSAxNy40OTQ3IDE1LjM1NDQgMTcuMzQ0NyAxNS40NDgxQzE3LjE5NDcgMTUuNTQxOSAxNy4wMTE5IDE1LjYxNjkgMTYuNzgyMiAxNS42NzMxQzE2LjU2MTkgMTUuNzI0NyAxNi4zMTM1IDE1Ljc1MjggMTUuOTg1MyAxNS43NTI4QzE1LjQ2OTcgMTUuNzUyOCAxNC45NTQxIDE1LjY2MzggMTQuNDg1MyAxNS40ODU2QzEzLjk2OTcgMTUuMzA3NSAxMy41MDEgMTUuMDQwMyAxMy4wNzkxIDE0LjY4ODhMMTMuMTY4MiAxNC42NjgxWk05LjIzMDY1IDguOTAyNUgxMi4yMzA3VjYuOTgwNjNIMy44NDAwM1Y4LjkwMjVINi44NDAwM1YxNy40ODA2SDkuMjMwNjVWOC45MDI1WicgLz5cbiAgPC9zdmc+XG4pKTsiLCJleHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKCgpID0+IChcbiAgPHN2ZyB3aWR0aD0nMjAnIGhlaWdodD0nMjAnIHZpZXdCb3g9JzAgMCAyNCAyNCcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJz5cbiAgICA8cGF0aCBmaWxsPScjRjdERjFFJyBkPSdNMTMuNjQyNyAxNC41NzlDMTQuMTI2MSAxNS4zNjg0IDE0Ljc1NTEgMTUuOTQ4NiAxNS44Njc1IDE1Ljk0ODZDMTYuODAxOSAxNS45NDg2IDE3LjM5ODkgMTUuNDgxNSAxNy4zOTg5IDE0LjgzNjJDMTcuMzk4OSAxNC4wNjI5IDE2Ljc4NTUgMTMuNzg5IDE1Ljc1NyAxMy4zMzlMMTUuMTkzMiAxMy4wOTcxQzEzLjU2NTcgMTIuNDAzOCAxMi40ODQ2IDExLjUzNTIgMTIuNDg0NiA5LjY5OTA1QzEyLjQ4NDYgOC4wMDc2MiAxMy43NzM0IDYuNzIgMTUuNzg3NSA2LjcyQzE3LjIyMTQgNi43MiAxOC4yNTIyIDcuMjE5MDUgMTguOTk1MSA4LjUyNTcyTDE3LjIzODkgOS42NTMzM0MxNi44NTIyIDguOTYgMTYuNDM1MSA4LjY4Njg2IDE1Ljc4NzUgOC42ODY4NkMxNS4xMjY5IDguNjg2ODYgMTQuNzA4MiA5LjEwNTkxIDE0LjcwODIgOS42NTMzM0MxNC43MDgyIDEwLjMyOTkgMTUuMTI3MyAxMC42MDM4IDE2LjA5NDkgMTEuMDIyOUwxNi42NTg3IDExLjI2NDRDMTguNTc0OSAxMi4wODYxIDE5LjY1NjggMTIuOTIzOCAxOS42NTY4IDE0LjgwNzJDMTkuNjU2OCAxNi44Mzc3IDE4LjA2MTcgMTcuOTUwMSAxNS45MTk2IDE3Ljk1MDFDMTMuODI1MiAxNy45NTAxIDEyLjQ3MiAxNi45NTIgMTEuODA5OSAxNS42NDM4TDEzLjY0MjcgMTQuNTc5Wk01LjY3NTg0IDE0Ljc3NDVDNi4wMzAxMiAxNS40MDMgNi4zNTI0MSAxNS45MzQ1IDcuMTI3MjYgMTUuOTM0NUM3Ljg2ODIyIDE1LjkzNDUgOC4zMzU2NSAxNS42NDQ2IDguMzM1NjUgMTQuNTE3M1Y2Ljg0ODc2SDEwLjU5MDlWMTQuNTQ3OEMxMC41OTA5IDE2Ljg4MyA5LjIyMTc0IDE3Ljk0NTkgNy4yMjMyNiAxNy45NDU5QzUuNDE3NTUgMTcuOTQ1OSA0LjM3MTg0IDE3LjAxMTQgMy44NDAwMyAxNS44ODU5TDUuNjc1ODQgMTQuNzc0NVonIC8+XG4gIDwvc3ZnPlxuKSk7IiwiZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbygoKSA9PiAoXG4gIDxzdmcgd2lkdGg9JzIwJyBoZWlnaHQ9JzIwJyBmaWxsPSdub25lJyB2aWV3Qm94PScwIDAgMjQgMjQnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zyc+XG4gICAgPHBhdGggZmlsbD0nIzYxREFGQicgZD0nTTEyIDEzLjY3NjNDMTMuMTMyMiAxMy42NzYzIDE0LjA1IDEyLjc1ODQgMTQuMDUgMTEuNjI2M0MxNC4wNSAxMC40OTQxIDEzLjEzMjIgOS41NzYyNiAxMiA5LjU3NjI2QzEwLjg2NzggOS41NzYyNiA5Ljk1MDAxIDEwLjQ5NDEgOS45NTAwMSAxMS42MjYzQzkuOTUwMDEgMTIuNzU4NCAxMC44Njc4IDEzLjY3NjMgMTIgMTMuNjc2M1onIC8+XG4gICAgPHBhdGggc3Ryb2tlPScjNjFEQUZCJyBkPSdNMTIgMTUuODI2M0MxOC4wNzUxIDE1LjgyNjMgMjMgMTMuOTQ1OSAyMyAxMS42MjYzQzIzIDkuMzA2NjcgMTguMDc1MSA3LjQyNjI3IDEyIDcuNDI2MjdDNS45MjQ4NyA3LjQyNjI3IDEgOS4zMDY2NyAxIDExLjYyNjNDMSAxMy45NDU5IDUuOTI0ODcgMTUuODI2MyAxMiAxNS44MjYzWicgLz5cbiAgICA8cGF0aCBzdHJva2U9JyM2MURBRkInIGQ9J004LjM2MjcyIDEzLjcyNjNDMTEuNDAwMyAxOC45ODc1IDE1LjQ5MTIgMjIuMzEyNCAxNy41IDIxLjE1MjZDMTkuNTA4OSAxOS45OTI4IDE4LjY3NDkgMTQuNzg3NSAxNS42MzczIDkuNTI2MjhDMTIuNTk5OCA0LjI2NTA2IDguNTA4ODUgMC45NDAyMDIgNi41MDAwMiAyLjFDNC40OTExOSAzLjI1OTggNS4zMjUxNSA4LjQ2NTA2IDguMzYyNzIgMTMuNzI2M1onIC8+XG4gICAgPHBhdGggc3Ryb2tlPScjNjFEQUZCJyBkPSdNOC4zNjI3MiA5LjUyNjI5QzUuMzI1MTUgMTQuNzg3NSA0LjQ5MTE5IDE5Ljk5MjggNi41MDAwMiAyMS4xNTI2QzguNTA4ODUgMjIuMzEyNCAxMi41OTk4IDE4Ljk4NzUgMTUuNjM3MyAxMy43MjYzQzE4LjY3NDkgOC40NjUwNyAxOS41MDg5IDMuMjU5ODEgMTcuNSAyLjEwMDAxQzE1LjQ5MTIgMC45NDAyMTQgMTEuNDAwMyA0LjI2NTA3IDguMzYyNzIgOS41MjYyOVonIC8+XG4gIDwvc3ZnPlxuKSk7IiwiZXhwb3J0IGRlZmF1bHQgUmVhY3QubWVtbygoKSA9PiAoXG4gIDxzdmcgd2lkdGg9JzIwJyBoZWlnaHQ9JzE2JyB2aWV3Qm94PScwIDAgMjQgMjQnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zyc+XG4gICAgPHBhdGggZmlsbD0nIzQyYTVmNScgZD0nbTUgMy0uNjUgMy4zNGgxMy41OUwxNy41IDguNUgzLjkybC0uNjYgMy4zM2gxMy41OWwtLjc2IDMuODEtNS40OCAxLjgxLTQuNzUtMS44MS4zMy0xLjY0SDIuODVsLS43OSA0IDcuODUgMyA5LjA1LTMgMS4yLTYuMDMuMjQtMS4yMUwyMS45NCAzSDV6JyAvPlxuICA8L3N2Zz5cbikpOyIsImV4cG9ydCBkZWZhdWx0IFJlYWN0Lm1lbW8oKCkgPT4gKFxuICA8c3ZnIHdpZHRoPScyMCcgaGVpZ2h0PScyMCcgdmlld0JveD0nMCAwIDI0IDI0JyBmaWxsPSdub25lJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnPlxuICAgIDxwYXRoIGZpbGw9JyNFQzQwN0EnIHN0cm9rZT0nI0VDNDA3QScgc3Ryb2tlLXdpZHRoPScwLjc4MTc1NCcgZD0nTTIwLjExNDIgNC42MTg5MUMxOS41MjkgMi4zMjI3MyAxNS43MjE5IDEuNTY4MTcgMTIuMTE4NiAyLjg0ODE0QzkuOTc0IDMuNjEwMTkgNy42NTMyNCA0LjgwNTgyIDUuOTgzNzYgNi4zNjcwMkMzLjk5OSA4LjIyMzQyIDMuNjgyNDkgOS44Mzg4MSAzLjgxMzM5IDEwLjUxNEM0LjI3MzM3IDEyLjg5NTggNy41Mzc0NyAxNC40NTMzIDguODc5MDcgMTUuNjA4VjE1LjYxNDlDOC40ODMyNiAxNS44MDk0IDUuNTg3OTUgMTcuMjc1IDQuOTEwMjQgMTguNzczM0M0LjE5NTM3IDIwLjM1NDEgNS4wMjQwOSAyMS40ODggNS41NzI4MyAyMS42NDFDNy4yNzMxOCAyMi4xMTQxIDkuMDE3NTUgMjEuMjYzNCA5Ljk1NTggMTkuODY0NUMxMC44NjA3IDE4LjUxNDcgMTAuNzg1MiAxNi43NzIyIDEwLjM5MTkgMTUuOTA1MUMxMC45MzQzIDE1Ljc2MjIgMTEuNTY2NyAxNS42OTggMTIuMzcwMyAxNS43OTE4QzE0LjYzODMgMTYuMDU2NyAxNS4wODMyIDE3LjQ3MjYgMTQuOTk4MiAxOC4wNjU0QzE0LjkxMzIgMTguNjU4MiAxNC40Mzc1IDE4Ljk4NDEgMTQuMjc4MyAxOS4wODIzQzE0LjExOTEgMTkuMTgwNCAxNC4wNzA3IDE5LjIxNTEgMTQuMDgzOSAxOS4yODhDMTQuMTAzNCAxOS4zOTQ0IDE0LjE3NyAxOS4zOTA2IDE0LjMxMjMgMTkuMzY3M0MxNC40OTkyIDE5LjMzNTkgMTUuNTAyOSAxOC44ODUzIDE1LjU0NjMgMTcuNzkxNkMxNS42MDEgMTYuNDAyOCAxNC4yNzAxIDE0Ljg0OTEgMTEuOTEzNSAxNC44OUMxMC45NDMxIDE0LjkwNyAxMC4zMzI3IDE0Ljk5ODkgOS44OTE1OCAxNS4xNjMyQzkuODU4ODkgMTUuMTI2IDkuODI2MTYgMTUuMDg4OSA5Ljc5MTU1IDE1LjA1MjRDOC4zMzQ3NSAxMy40OTggNS42NDE0NyAxMi4zOTg3IDUuNzU1MzIgMTAuMzA4OUM1Ljc5Njg5IDkuNTQ5MzIgNi4wNjExOCA3LjU0ODg4IDEwLjkzMDUgNS4xMjIzM0MxNC45MTk1IDMuMTM0NDYgMTguMTEzMiAzLjY4MTkgMTguNjY1IDQuODkzOUMxOS40NTM1IDYuNjI1NjkgMTYuOTU4NCA5Ljg0NDQ4IDEyLjgxNTkgMTAuMzA4OUMxMS4yMzc2IDEwLjQ4NTcgMTAuNDA2MyA5Ljg3NCAxMC4xOTk5IDkuNjQ2MjRDOS45ODIyIDkuNDA2NDggOS45NTAxNCA5LjM5NTc3IDkuODY4MyA5LjQ0MDQ2QzkuNzM2MTYgOS41MTQwOSA5LjgxOTgyIDkuNzI1NTMgOS44NjgzIDkuODUyMDFDOS45OTIyOCAxMC4xNzQyIDEwLjQ5OTUgMTAuNzQ1IDExLjM2NDcgMTEuMDI4OEMxMi4xMjYyIDExLjI3ODYgMTMuOTc4OCAxMS40MTU4IDE2LjIyMDMgMTAuNTQ5M0MxOC43Mjk4IDkuNTc3MDIgMjAuNjkgNi44NzYxNiAyMC4xMTQyIDQuNjE4OTFWNC42MTg5MVpNOS40MzYwMSAxNi4zMTk4QzkuNjI0MTcgMTcuMDE1OCA5LjYwMzM5IDE3LjY2NDUgOS40MDg5NCAxOC4yNTE2QzkuMzY1OCAxOC4zODI0IDkuMzE0MDkgMTguNTEwMiA5LjI1NDE0IDE4LjYzNDJDOS4xMDQzOCAxOC45NDUxIDguOTAzMDIgMTkuMjM1OCA4LjY1Njk3IDE5LjUwNDVDNy45MDU1OCAyMC4zMjM5IDYuODU2NTkgMjAuNjM0MSA2LjQwNjY0IDIwLjM3MjlDNS45MjA4OCAyMC4wOTEgNi4xNjQzOCAxOC45MzU3IDcuMDM0NjcgMTguMDE1N0M3Ljk3MTYzIDE3LjAyNTIgOS4zMTk1NiAxNi4zODg0IDkuMzE5NTYgMTYuMzg4NEw5LjMxNzY5IDE2LjM4NDVMOS40MzYwMSAxNi4zMTk3VjE2LjMxOThaJyAvPlxuICA8L3N2Zz5cbikpOyIsIi8qIFRoZSBiZWxvdyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciBNSVQuICovXG5cbmltcG9ydCBUUyBmcm9tICcuL1RTJztcbmltcG9ydCBKUyBmcm9tICcuL0pTJztcbmltcG9ydCBKU1ggZnJvbSAnLi9KU1gnO1xuaW1wb3J0IENTUyBmcm9tICcuL0NTUyc7XG5pbXBvcnQgU0FTUyBmcm9tICcuL1NBU1MnO1xuXG5leHBvcnQgZGVmYXVsdCAoeyBleHRlbnNpb24gfTogeyBleHRlbnNpb246IHN0cmluZzsgfSkgPT4ge1xuICBzd2l0Y2ggKGV4dGVuc2lvbikge1xuICAgIGNhc2UgJ3RzJzogcmV0dXJuIDxUUyAvPjtcbiAgICBjYXNlICdqcyc6IHJldHVybiA8SlMgLz47XG4gICAgY2FzZSAnY3NzJzogcmV0dXJuIDxDU1MgLz47XG4gICAgY2FzZSAnanN4JzogcmV0dXJuIDxKU1ggLz47XG4gICAgY2FzZSAnc2Nzcyc6IHJldHVybiA8U0FTUyAvPjtcblxuICAgIC8vIFJldHVybiBmcmFnbWVudCBzbyBpdCBkb2Vzbid0IGVycm9yXG4gICAgZGVmYXVsdDogcmV0dXJuIDw+PC8+O1xuICB9XG59OyIsIi8qIFRoZSBiZWxvdyBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIE1JVC4gKi9cblxudHlwZSBFID0gSlNYLkVsZW1lbnQ7XG5cbi8vIFRoZSBiZWxvdyBjb2RlIGlzIHZlcnkgdWdseSBidXQgaXMgd3JpdHRlbiB0byBiZSBwZXJmb3JtYW50LCBub3Qgc3R5bGlzaC5cbi8vIElmIHlvdSdyZSBjb25mdXNlZCBieSBhbnkgaW1wb3J0IGNvZGU6IGlmIGl0J3MgZGVzdHJ1Y3R1cmVkIGl0J3MgdGhlIGZ1bmN0aW9uIHZlcnNpb24uXG5pbnRlcmZhY2UgcHJvcHM8VD4geyBlYWNoOiBUW107IGZhbGxiYWNrPzogRTsgY2hpbGRyZW46IChpdGVtOiBULCBpbmRleDogbnVtYmVyKSA9PiBFOyB9XG5leHBvcnQgZGVmYXVsdCA8VCw+KHsgZWFjaCwgZmFsbGJhY2ssIGNoaWxkcmVuIH06IHByb3BzPFQ+KTogRSA9PiB7XG4gIGlmICghZWFjaD8ubGVuZ3RoKSByZXR1cm4gZmFsbGJhY2sgPz8gPD48Lz47XG5cbiAgbGV0IGVsZW1lbnRzOiBFW10gPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlYWNoLmxlbmd0aDsgaSsrKVxuICAgIGVsZW1lbnRzW2ldID0gY2hpbGRyZW4oZWFjaFtpXSwgaSk7XG5cbiAgcmV0dXJuIDw+e2VsZW1lbnRzfTwvPjtcbn07XG5cbi8vIFRoaXMgaXMgYSBmdW5jdGlvbiB2ZXJzaW9uIGZvciB0aGluZ3MgdGhhdCBuZWVkIHRoZSByZXR1cm4gdG8gYmUgYW4gYXJyYXkgaW5zdGVhZCBvZiBhIFJlYWN0IEVsZW1lbnQuXG5pbnRlcmZhY2UgZnVuY3Rpb25Qcm9wczxUPiB7IGVhY2g6IFRbXSwgZXhlYzogKGl0ZW06IFQsIGluZGV4OiBudW1iZXIpID0+IEUsIGZhbGxiYWNrPzogRTsgfTtcbmV4cG9ydCBjb25zdCBGb3JFYWNoT3B0aW1pemVkID0gPFQsPih7IGVhY2gsIGV4ZWMsIGZhbGxiYWNrIH06IGZ1bmN0aW9uUHJvcHM8VD4pOiBFIHwgRVtdID0+IHtcbiAgaWYgKCFlYWNoPy5sZW5ndGgpIHJldHVybiBmYWxsYmFjayA/PyA8PjwvPjtcblxuICBsZXQgZWxlbWVudHM6IEVbXSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVhY2gubGVuZ3RoOyBpKyspXG4gICAgZWxlbWVudHNbaV0gPSBleGVjKGVhY2hbaV0sIGkpO1xuXG4gIHJldHVybiBlbGVtZW50cztcbn07IiwiLyogVGhlIGJlbG93IHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIE1JVC4gKi9cblxuaW1wb3J0IE1hbmFnZXIgZnJvbSAnQG1vZHVsZXMvTWFuYWdlcic7XG5pbXBvcnQgV2VicGFjaywgeyBGaWx0ZXJzIH0gZnJvbSAnQG1vZHVsZXMvV2VicGFjayc7XG5cbmltcG9ydCB7IGNqb2luLCBleHRlbnNpb25zIH0gZnJvbSAnQG1vZHVsZXMvVXRpbGl0aWVzJztcblxuaW1wb3J0IFNuaXBwZXRJY29uIGZyb20gJ0Bjb21wb25lbnRzL2ljb25zL0ljb24nO1xuaW1wb3J0IFVzZXJJbnB1dCBmcm9tICdAY29tcG9uZW50cy9tb2RhbHMvVXNlcklucHV0JztcbmltcG9ydCBEZWxldGVDb25maXJtIGZyb20gJ0Bjb21wb25lbnRzL21vZGFscy9EZWxldGVDb25maXJtJztcbmltcG9ydCBGb3JFYWNoT3B0aW1pemVkIGZyb20gJ0Bjb21wb25lbnRzL3V0aWxpdHkvRm9yRWFjaE9wdGltaXplZCc7XG5cbmNvbnN0IGpvaW4gPSBjam9pbignc2lkZWJhcicpO1xuXG5jb25zdCBbXG4gIEZvcm1UaXRsZSxcbiAgRHJhZ0hvb2tzLFxuICBCdXR0b25Db2xvcnMsXG4gIE1vZGFsQWN0aW9ucyxcbiAgQ29udGV4dE1lbnVBY3Rpb25zXG5dID0gV2VicGFjay5idWxrKFxuICBGaWx0ZXJzLmJ5RGlzcGxheU5hbWUoJ0Zvcm1UaXRsZScpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ0Ryb3BUYXJnZXQnLCAndXNlRHJvcCcpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ2Rhbmdlcm91cycsICdzZWxlY3RlZCcpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ2Nsb3NlTW9kYWwnKSxcbiAgRmlsdGVycy5ieVByb3BzKCdvcGVuQ29udGV4dE1lbnVMYXp5JyksXG4pO1xuXG5jb25zdCB7XG4gIEljb24sXG4gIFRvb2x0aXAsXG4gIENvbnRleHRNZW51LFxuICBCYXJsZXNzU2Nyb2xsZXIsXG59ID0gV2VicGFjay5jb21wb25lbnRzO1xuXG5pbnRlcmZhY2UgVGFiSXRlbVByb3BzIHtcbiAgaW5kZXg6IG51bWJlcjtcbiAgc25pcHBldDogc3RyaW5nO1xuICBjb2xsYXBzZWQ6IGJvb2xlYW47XG4gIGZvcmNlVXBkYXRlOiBSZWFjdC5EaXNwYXRjaFdpdGhvdXRBY3Rpb247XG4gIGRyYWdnaW5nUmVmOiBSZWFjdC5NdXRhYmxlUmVmT2JqZWN0PGJvb2xlYW4+O1xuICBzdGF0ZTogW3N0cmluZywgUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj4sIHN0cmluZ107XG59XG5cbmludGVyZmFjZSBUYWJJdGVtQ29udGV4dE1lbnVQcm9wcyB7XG4gIHNuaXBwZXQ6IHN0cmluZztcbiAgZm9yY2VVcGRhdGU6IFJlYWN0LkRpc3BhdGNoV2l0aG91dEFjdGlvbjtcbiAgZXZlbnQ6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQsIE1vdXNlRXZlbnQ+O1xuICBzdGF0ZTogW3N0cmluZywgUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj4sIHN0cmluZ107XG59XG5cbmV4cG9ydCBkZWZhdWx0ICh7IHN0YXRlcyB9OiB7IHN0YXRlczogU3RhdGVzOyB9KTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCB7IExFRlQsIFJJR0hUIH0gPSBJY29uLkNhcmV0LkRpcmVjdGlvbnM7XG4gIGNvbnN0IHsgYnV0dG9uIH0gPSBCdXR0b25Db2xvcnM7XG5cbiAgLy8gU2hvdmUgaXQgaW4gYW4gb2JqZWN0IHNvIGl0IGNhbiBiZSByZWFkIGJ5IG1lbW9pemVkIGZ1bmN0aW9ucy5cbiAgLy8gVGhpcyBpcyBmb3IgdGhlIGhvdmVyIHRvb2x0aXAgbm90IHRvIHNob3cgd2hpbGUgdGhlIGl0ZW0gaXMgYmVpbmcgZHJhZ2dlZC5cbiAgY29uc3QgZHJhZ2dpbmdSZWYgPSBSZWFjdC51c2VSZWYoZmFsc2UpO1xuICBjb25zdCBzZXREcmFnZ2luZyA9ICh2YWx1ZTogTW91c2VFdmVudCkgPT4ge1xuICAgIGRyYWdnaW5nUmVmLmN1cnJlbnQgPSB2YWx1ZS50eXBlID09PSAnbW91c2Vkb3duJztcbiAgfTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHNldERyYWdnaW5nKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgc2V0RHJhZ2dpbmcpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHNldERyYWdnaW5nKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBzZXREcmFnZ2luZyk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IHNldEN1cnJlbnRTbmlwcGV0ID0gc3RhdGVzLmN1cnJlbnRTbmlwcGV0WzFdO1xuICBjb25zdCBbY29sbGFwc2VkLCB0b2dnbGVDb2xsYXBzZWRdID0gc3RhdGVzLmNvbGxhcHNlZFN0YXRlO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2pvaW4oJ2NvbnRhaW5lcicsIGNvbGxhcHNlZCA/ICdjb2xsYXBzZWQnIDogJ2V4cGFuZGVkJyl9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2pvaW4oJ3RvcGJhcicpfT5cbiAgICAgICAge2NvbGxhcHNlZCB8fFxuICAgICAgICAgIDxGb3JtVGl0bGUgdGFnPSdoMyc+XG4gICAgICAgICAgICBTbmlwcGV0c1xuICAgICAgICAgIDwvRm9ybVRpdGxlPn1cbiAgICAgICAge2NvbGxhcHNlZCB8fFxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzTmFtZT17YnV0dG9ufVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICBNb2RhbEFjdGlvbnMub3Blbk1vZGFsKChldmVudDogTW9kYWxFdmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiA8VXNlcklucHV0IGV2ZW50PXtldmVudH0gYWN0aW9uPXsoaW5wdXQ6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc3QgW25hbWUsIGV4dGVuc2lvbl0gPSBpbnB1dC5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgICAgTWFuYWdlci5jcmVhdGVTbmlwcGV0KG5hbWUsIGV4dGVuc2lvbik7XG4gICAgICAgICAgICAgICAgICBzZXRDdXJyZW50U25pcHBldChuYW1lKTtcbiAgICAgICAgICAgICAgICB9fSBvcHRpb25zPXt7XG4gICAgICAgICAgICAgICAgICBidXR0b25UZXh0OiAnQ3JlYXRlIFNuaXBwZXQnLFxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdCbG9jayBBbGwgQXN0cmEgVXNlcnMudHMnLFxuICAgICAgICAgICAgICAgICAgaGVhZGVyVGV4dDogJ3Bzc3QgeW91IGNhbiB1c2UgdHlwZXNjcmlwdCBhbmQganN4IScsXG4gICAgICAgICAgICAgICAgICB0aXRsZVRleHQ6ICdDcmVhdGUgU25pcHBldCAoaW5jbHVkZSB0aGUgZXh0ZW5zaW9uKScsXG4gICAgICAgICAgICAgICAgICByZWplY3RGaWx0ZXI6IChpbnB1dDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChNYW5hZ2VyLmdldFNuaXBwZXRzKClbaW5wdXQuc3BsaXQoJy4nKT8uWzBdXSlcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0Egc25pcHBldCB3aXRoIHRoYXQgbmFtZSBpcyBhbHJlYWR5IHNhdmVkISc7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZXh0ZW5zaW9ucy5zb21lKChleHQpID0+IGlucHV0LnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoYC4ke2V4dH1gKSkpXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdNdXN0IGhhdmUgYSB2YWxpZCBleHRlbnNpb24uJztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9fSAvPjtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgIDxJY29uLlBsdXMgaGVpZ2h0PScyMCcgd2lkdGg9JzIwJyAvPlxuICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2J1dHRvbn0gb25DbGljaz17dG9nZ2xlQ29sbGFwc2VkfT5cbiAgICAgICAgICA8SWNvbi5DYXJldCBoZWlnaHQ9JzIwJyB3aWR0aD0nMjAnIGRpcmVjdGlvbj17Y29sbGFwc2VkID8gUklHSFQgOiBMRUZUfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2pvaW4oJ2RpdmlkZXInKX0gLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtqb2luKFsndGFiJywgJ2xpc3QnXSl9PlxuICAgICAgICA8QmFybGVzc1Njcm9sbGVyPlxuICAgICAgICAgIDxGb3JFYWNoT3B0aW1pemVkIGVhY2g9e09iamVjdC5rZXlzKE1hbmFnZXIuZ2V0U25pcHBldHMoKSl9PlxuICAgICAgICAgICAgeyhzbmlwcGV0LCBpbmRleCkgPT5cbiAgICAgICAgICAgICAgPFRhYkl0ZW1cbiAgICAgICAgICAgICAgICBpbmRleD17aW5kZXh9XG4gICAgICAgICAgICAgICAgc25pcHBldD17c25pcHBldH1cbiAgICAgICAgICAgICAgICBjb2xsYXBzZWQ9e2NvbGxhcHNlZH1cbiAgICAgICAgICAgICAgICBkcmFnZ2luZ1JlZj17ZHJhZ2dpbmdSZWZ9XG4gICAgICAgICAgICAgICAgc3RhdGU9e3N0YXRlcy5jdXJyZW50U25pcHBldH1cbiAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZT17c3RhdGVzLmZvcmNlVXBkYXRlfSAvPn1cbiAgICAgICAgICA8L0ZvckVhY2hPcHRpbWl6ZWQ+XG4gICAgICAgIDwvQmFybGVzc1Njcm9sbGVyPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCB0eXBlID0gJ0NPREVfU05JUFBFVFNfSVRFTSc7XG5jb25zdCB7IHVzZURyYWcsIHVzZURyb3AgfSA9IERyYWdIb29rcztcbmNvbnN0IFRhYkl0ZW0gPSAoeyBzbmlwcGV0LCBzdGF0ZSwgaW5kZXgsIGZvcmNlVXBkYXRlLCBjb2xsYXBzZWQsIGRyYWdnaW5nUmVmIH06IFRhYkl0ZW1Qcm9wcykgPT4ge1xuICBjb25zdCBbeyBkcmFnSW5kZXggfSwgZHJvcF0gPSB1c2VEcm9wKHtcbiAgICBhY2NlcHQ6IHR5cGUsXG4gICAgZHJvcDogKCkgPT4gKHsgZHJvcEluZGV4OiBpbmRleCB9KSxcbiAgICBjb2xsZWN0OiAobW9uaXRvcikgPT4ge1xuICAgICAgY29uc3Qgc25pcHBldCA9IG1vbml0b3IuZ2V0SXRlbSgpO1xuICAgICAgcmV0dXJuIHNuaXBwZXQgJiYgbW9uaXRvci5pc092ZXIoKSA/IHtcbiAgICAgICAgZHJhZ0luZGV4OiBzbmlwcGV0LmluZGV4XG4gICAgICB9IDogeyBkcmFnSW5kZXg6IG51bGwgfTtcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCBkcmFnID0gdXNlRHJhZyh7XG4gICAgdHlwZSwgaXRlbTogeyBzbmlwcGV0LCBpbmRleCB9LFxuICAgIGVuZDogKF8sIG1vbml0b3IpID0+IHtcbiAgICAgIGNvbnN0IHsgZHJvcEluZGV4IH0gPSBtb25pdG9yLmdldERyb3BSZXN1bHQoKTtcbiAgICAgIE1hbmFnZXIubW92ZVNuaXBwZXQoc25pcHBldCwgZHJvcEluZGV4KTtcbiAgICB9XG4gIH0pWzFdO1xuXG4gIGNvbnN0IFt0b29sdGlwVmlzaWJsZSwgc2V0VG9vbHRpcFZpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIFRpbWVyIHN5c3RlbSBmb3IgbG9uZyBob3ZlclxuICBsZXQgdGltZXI6IE5vZGVKUy5UaW1lb3V0O1xuICBjb25zdCBtb3VzZUVudGVyID0gKCkgPT4ge1xuICAgIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIWRyYWdnaW5nUmVmLmN1cnJlbnQpXG4gICAgICAgIHNldFRvb2x0aXBWaXNpYmxlKHRydWUpO1xuICAgIH0sIDg1MCk7XG4gIH07XG5cbiAgY29uc3QgbW91c2VMZWF2ZSA9ICgpID0+IHtcbiAgICBzZXRUb29sdGlwVmlzaWJsZShmYWxzZSk7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgfTtcblxuICBjb25zdCBbY3VycmVudFNuaXBwZXQsIHNldEN1cnJlbnRTbmlwcGV0XSA9IHN0YXRlO1xuXG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXBcbiAgICAgIHBvc2l0aW9uPSd0b3AnXG4gICAgICBzaG91bGRTaG93PXt0b29sdGlwVmlzaWJsZX1cbiAgICAgIHRleHQ9e2Ake3NuaXBwZXR9LiR7TWFuYWdlci5nZXRTbmlwcGV0KHNuaXBwZXQpLmV4dGVuc2lvbn1gfT5cbiAgICAgIDxkaXZcbiAgICAgICAgb25Nb3VzZUVudGVyPXttb3VzZUVudGVyfVxuICAgICAgICBvbk1vdXNlTGVhdmU9e21vdXNlTGVhdmV9XG4gICAgICAgIHJlZj17KG5vZGUpID0+IGRyYWcoZHJvcChub2RlIHx8IG51bGwpKX1cbiAgICAgICAgb25DbGljaz17KCkgPT4gc2V0Q3VycmVudFNuaXBwZXQoc25pcHBldCl9XG4gICAgICAgIG9uQ29udGV4dE1lbnU9eyhldmVudCkgPT5cbiAgICAgICAgICBUYWJJdGVtQ29udGV4dE1lbnUoe1xuICAgICAgICAgICAgZXZlbnQsXG4gICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgIHNuaXBwZXQsXG4gICAgICAgICAgICBmb3JjZVVwZGF0ZVxuICAgICAgICAgIH0pfVxuICAgICAgICBjbGFzc05hbWU9e2pvaW4oXG4gICAgICAgICAgWyd0YWInLCAnaXRlbSddLFxuICAgICAgICAgIGRyYWdJbmRleCAhPT0gbnVsbCAmJiBkcmFnSW5kZXggIT09IGluZGV4ID8gZHJhZ0luZGV4ID4gaW5kZXhcbiAgICAgICAgICAgID8gWyd0YWInLCAnaXRlbScsICdkcmFnJywgJ2JlbG93J11cbiAgICAgICAgICAgIDogWyd0YWInLCAnaXRlbScsICdkcmFnJywgJ2Fib3ZlJ10gOiAnJyxcbiAgICAgICAgICBzbmlwcGV0ID09PSBjdXJyZW50U25pcHBldCA/IFsndGFiJywgJ2l0ZW0nLCAnc2VsZWN0ZWQnXSA6ICcnXG4gICAgICAgICl9PlxuICAgICAgICA8U25pcHBldEljb24gZXh0ZW5zaW9uPXtNYW5hZ2VyLmdldFNuaXBwZXQoc25pcHBldCkuZXh0ZW5zaW9ufSAvPlxuICAgICAgICB7Y29sbGFwc2VkIHx8IDxkaXYgY2xhc3NOYW1lPXtqb2luKFsndGFiJywgJ2l0ZW0nLCAndGV4dCddKX0+e3NuaXBwZXR9PC9kaXY+fVxuICAgICAgPC9kaXY+XG4gICAgPC9Ub29sdGlwPlxuICApO1xufTtcblxuY29uc3QgVGFiSXRlbUNvbnRleHRNZW51ID0gKHsgZXZlbnQsIHNuaXBwZXQsIHN0YXRlLCBmb3JjZVVwZGF0ZSB9OiBUYWJJdGVtQ29udGV4dE1lbnVQcm9wcykgPT4ge1xuICBjb25zdCBbY3VycmVudFNuaXBwZXQsIHNldEN1cnJlbnRTbmlwcGV0LCBsYXN0U25pcHBldF0gPSBzdGF0ZTtcblxuICBDb250ZXh0TWVudUFjdGlvbnMub3BlbkNvbnRleHRNZW51KGV2ZW50LCAoKSA9PiAoXG4gICAgPENvbnRleHRNZW51LkNvbnRhaW5lciBvbkNsb3NlPXtDb250ZXh0TWVudUFjdGlvbnMuY2xvc2VDb250ZXh0TWVudX0+XG4gICAgICA8Q29udGV4dE1lbnUuSXRlbVxuICAgICAgICBpZD0ncmVuYW1lJ1xuICAgICAgICBsYWJlbD0nUmVuYW1lIFNuaXBwZXQnXG4gICAgICAgIGFjdGlvbj17KCkgPT4ge1xuICAgICAgICAgIE1vZGFsQWN0aW9ucy5vcGVuTW9kYWwoKGV2ZW50OiBNb2RhbEV2ZW50KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gPFVzZXJJbnB1dCBldmVudD17ZXZlbnR9IGFjdGlvbj17KGlucHV0OiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coaW5wdXQsICdpbnB1c3QnKTtcbiAgICAgICAgICAgICAgY29uc3QgW25hbWUsIGV4dGVuc2lvbl0gPSBpbnB1dC5zcGxpdCgnLicpO1xuXG4gICAgICAgICAgICAgIGlmIChleHRlbnNpb24gJiYgZXh0ZW5zaW9ucy5pbmNsdWRlcyhleHRlbnNpb24pKVxuICAgICAgICAgICAgICAgIE1hbmFnZXIudXBkYXRlU25pcHBldChzbmlwcGV0LCB7IGV4dGVuc2lvbiB9KTtcblxuICAgICAgICAgICAgICBpZiAobmFtZSAhPT0gc25pcHBldClcbiAgICAgICAgICAgICAgICBNYW5hZ2VyLnJlbmFtZVNuaXBwZXQoc25pcHBldCwgbmFtZSk7XG5cbiAgICAgICAgICAgICAgc2V0Q3VycmVudFNuaXBwZXQobmFtZSk7XG4gICAgICAgICAgICB9fSBvcHRpb25zPXt7XG4gICAgICAgICAgICAgIGluaXRpYWxJbnB1dDogc25pcHBldCxcbiAgICAgICAgICAgICAgdGl0bGVUZXh0OiAnUmVuYW1lIFNuaXBwZXQnLFxuICAgICAgICAgICAgICBidXR0b25UZXh0OiAnUmVuYW1lIFNuaXBwZXQnLFxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJ0N1dGUgR2lybCBHZXR0ZXIudHMnLFxuICAgICAgICAgICAgICBoZWFkZXJUZXh0OiAnQnkgdGhlIHdheSwgeW91IGNhbiBjaGFuZ2UgdGhlIGV4dGVuc2lvbiEnLFxuICAgICAgICAgICAgICByZWplY3RGaWx0ZXI6IChpbnB1dDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3BsaXQgPSBpbnB1dC5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgIGlmIChzbmlwcGV0ICE9PSBzcGxpdFswXSAmJiBNYW5hZ2VyLmdldFNuaXBwZXRzKClbc3BsaXRbMF1dKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuICdBIHNuaXBwZXQgd2l0aCB0aGF0IG5hbWUgaXMgYWxyZWFkeSBzYXZlZCEnO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHNwbGl0WzFdLCBleHRlbnNpb25zLmluY2x1ZGVzKHNwbGl0WzFdKSk7XG4gICAgICAgICAgICAgICAgaWYgKHNwbGl0WzFdICYmICFleHRlbnNpb25zLmluY2x1ZGVzKHNwbGl0WzFdKSlcbiAgICAgICAgICAgICAgICAgIHJldHVybiBgJHtzcGxpdFsxXX0gaXMgbm90IGEgdmFsaWQgZXh0ZW5zaW9uLmA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19IC8+O1xuICAgICAgICAgIH0pO1xuICAgICAgICB9fSAvPlxuICAgICAgPENvbnRleHRNZW51Lkl0ZW1cbiAgICAgICAgaWQ9J2Nsb3NlJ1xuICAgICAgICBjb2xvcj0nY29sb3JEYW5nZXInXG4gICAgICAgIGxhYmVsPSdEZWxldGUgU25pcHBldCdcbiAgICAgICAgYWN0aW9uPXsoKSA9PiB7XG4gICAgICAgICAgTW9kYWxBY3Rpb25zLm9wZW5Nb2RhbCgoZXZlbnQ6IE1vZGFsRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiA8RGVsZXRlQ29uZmlybSBldmVudD17ZXZlbnR9IGFjdGlvbj17KCkgPT4ge1xuICAgICAgICAgICAgICBNYW5hZ2VyLmRlbGV0ZVNuaXBwZXQoc25pcHBldCk7XG4gICAgICAgICAgICAgIGlmIChzbmlwcGV0ID09PSBjdXJyZW50U25pcHBldClcbiAgICAgICAgICAgICAgICByZXR1cm4gc2V0Q3VycmVudFNuaXBwZXQobGFzdFNuaXBwZXQpO1xuICAgICAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgICAgfX0gLz47XG4gICAgICAgICAgfSk7XG4gICAgICAgIH19IC8+XG4gICAgPC9Db250ZXh0TWVudS5Db250YWluZXI+XG4gICkpO1xufTs7IiwiLyogVGhlIGJlbG93IGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgTUlULiAqL1xuXG5pbXBvcnQgTWFuYWdlciBmcm9tICdAbW9kdWxlcy9NYW5hZ2VyJztcbmltcG9ydCBXZWJwYWNrLCB7IEZpbHRlcnMgfSBmcm9tICdAbW9kdWxlcy9XZWJwYWNrJztcblxuaW1wb3J0IHsgY2pvaW4gfSBmcm9tICdAbW9kdWxlcy9VdGlsaXRpZXMnO1xuXG5jb25zdCBzaW1wbGVEZWRlbnQgPSAoW3N0cmluZ106IFRlbXBsYXRlU3RyaW5nc0FycmF5KSA9PlxuICBzdHJpbmcuc3BsaXQoJ1xcbicpLm1hcCgoc3RyKSA9PiBzdHIudHJpbSgpKS5qb2luKCdcXG4nKTtcblxuY29uc3QgW1xuICBCdXR0b24sXG4gIEZvcm1UZXh0LFxuICBGb3JtVGl0bGUsXG4gIHsgQWR2YW5jZWRTY3JvbGxlclRoaW4gfVxuXSA9IFdlYnBhY2suYnVsayhcbiAgRmlsdGVycy5ieVByb3BzKCdEcm9wZG93blNpemVzJyksXG4gIEZpbHRlcnMuYnlEaXNwbGF5TmFtZSgnRm9ybVRleHQnKSxcbiAgRmlsdGVycy5ieURpc3BsYXlOYW1lKCdGb3JtVGl0bGUnKSxcbiAgRmlsdGVycy5ieVByb3BzKCdBZHZhbmNlZFNjcm9sbGVyVGhpbicpLFxuKTtcblxuY29uc3QgbWFrZUNvZGVCbG9jayA9IFdlYnBhY2suZ2V0QnlQcm9wcygncGFyc2UnLCAncGFyc2VUb3BpYycpLmRlZmF1bHRSdWxlcy5jb2RlQmxvY2sucmVhY3Q7XG5cbmNvbnN0IHsgTW9kYWwgfSA9IFdlYnBhY2suY29tcG9uZW50cztcblxuY29uc3Qgam9pbiA9IGNqb2luKCdtb2RhbC1pbmZvcm1hdGlvbicpO1xuXG5leHBvcnQgZGVmYXVsdCAoeyBldmVudCB9OiB7IGV2ZW50OiBNb2RhbEV2ZW50OyB9KTogSlNYLkVsZW1lbnQgPT4ge1xuICByZXR1cm4gKFxuICAgIDxNb2RhbC5Sb290IHRyYW5zaXRpb25TdGF0ZT17ZXZlbnQudHJhbnNpdGlvblN0YXRlfSBzaXplPXtNb2RhbC5TaXplcy5MQVJHRX0+XG4gICAgICA8TW9kYWwuSGVhZGVyPlxuICAgICAgICA8Rm9ybVRpdGxlIHRhZz0naDMnPmluZm9ybWF0aW9uIE1vZGFsPC9Gb3JtVGl0bGU+XG4gICAgICAgIDxNb2RhbC5DbG9zZUJ1dHRvbiBvbkNsaWNrPXtldmVudC5vbkNsb3NlfSAvPlxuICAgICAgPC9Nb2RhbC5IZWFkZXI+XG4gICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpblRvcDogJzEwcHgnIH19IC8+XG4gICAgICA8TW9kYWwuQ29udGVudD5cbiAgICAgICAgPEFkdmFuY2VkU2Nyb2xsZXJUaGluPlxuICAgICAgICAgIDxGb3JtVGl0bGUgdGFnPSdoMicgPkluZm9ybWF0aW9uIEZvciBEZXZlbG9wZXJzPC9Gb3JtVGl0bGU+XG4gICAgICAgICAgPEZvcm1UZXh0IHR5cGU9J2Rlc2NyaXB0aW9uJyBzdHlsZT17eyBwYWRkaW5nQm90dG9tOiAnNnB4JyB9fT5cbiAgICAgICAgICAgIEFsbCBzbmlwcGV0cyBhcmUgcnVuIGFzeW5jaHJvbm91c2x5LCBpbiB0aGUgZ2xvYmFsIHNjb3BlLCBhbmQgd2l0aCBmb3VyIHByZWRlZmluZWQgdmFyaWFibGVzOjxiciAvPjxiciAvPlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17am9pbignY29kZWJsb2NrJyl9PlxuICAgICAgICAgICAgICB7bWFrZUNvZGVCbG9jayh7XG4gICAgICAgICAgICAgICAgY29udGVudDogc2ltcGxlRGVkZW50YFxuICAgICAgICAgICAgICAgICAgbGV0IExvZ2dlciAgPSB3aW5kb3cuY3MubG9nZ2VyO1xuICAgICAgICAgICAgICAgICAgbGV0IFBhdGNoZXIgPSB3aW5kb3cuY3MucGF0Y2hlcjtcbiAgICAgICAgICAgICAgICAgIGxldCBXZWJwYWNrID0gd2luZG93LmNzLndlYnBhY2s7XG4gICAgICAgICAgICAgICAgICBsZXQgTWFuYWdlciA9IHdpbmRvdy5jcy5tYW5hZ2VyO1xuICAgICAgICAgICAgICAgIGAudHJpbSgpLCBsYW5nOiAnanMnXG4gICAgICAgICAgICAgIH0sIG51bGwsIHt9KX1cbiAgICAgICAgICAgIDwvZGl2PjxiciAvPlxuXG4gICAgICAgICAgICBZb3UgY2FuIGxvb2sgYXQgdGhlIHNvdXJjZSB0byBmaW5kIG91dCBob3cgdG8gdXNlIHRoZXNlIG9yIHlvdSBjYW4gcGxheSB3aXRoIHRoZSBXZWJwYWNrIGFuZCBQYXRjaGVyIGluIHRoZSBjb25zb2xlIGJ5IHVzaW5nIHRoZSBleHBvc2VkIFwiY3NcIiB2YXJpYWJsZS48YnIgLz48YnIgLz5cblxuICAgICAgICAgICAgT2YgY291cnNlIGlmIHlvdSBkb24ndCB3YW50IHRvIHVzZSBteSBwYXRjaGVyIGFuZC9vciB3ZWJwYWNrIHlvdSBjYW4gYWx3YXlzIHJlZGVmaW5lIHRoZW0gbGlrZSBzbzo8YnIgLz48YnIgLz5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2pvaW4oJ2NvZGVibG9jaycpfT57bWFrZUNvZGVCbG9jayh7IGNvbnRlbnQ6ICdXZWJwYWNrID0gd2luZG93LnVuYm91bmQud2VicGFjazsnLCBsYW5nOiAnanMnIH0sIG51bGwsIHt9KX08L2Rpdj48YnIgLz5cblxuICAgICAgICAgICAgRG8gbm90ZSB0aG91Z2ggdGhhdCB0aGlzIHJlcXVpcmVzIHRoZSB1c2VyIHRvIGFsc28gaGF2ZSB3aGF0ZXZlciBwbHVnaW4vcGFja2FnZSB0aGF0IGRlZmluZXMgc2FpZCB2YXJpYWJsZSBpbnN0YWxsZWQuXG4gICAgICAgICAgPC9Gb3JtVGV4dD5cbiAgICAgICAgICA8Rm9ybVRpdGxlIGNsYXNzTmFtZT17am9pbihbJ3BhZCcsICd0aXRsZSddKX0+Q2xlYW51cCBGdW5jdGlvbnM8L0Zvcm1UaXRsZT5cbiAgICAgICAgICA8Rm9ybVRleHQgdHlwZT0nZGVzY3JpcHRpb24nIHN0eWxlPXt7IHBhZGRpbmdCb3R0b206ICc2cHgnIH19PlxuICAgICAgICAgICAgSWYgYSBzbmlwcGV0IHJldHVybnMgYSBmdW5jdGlvbiBpdCB3aWxsIGJlIGNhY2hlZCBhbmQgd2lsbCBydW4gb24gZXZlcnkgc25pcHBldCByZXJ1biBvciBjYW4gYmUgbWFudWFsbHkgY2FsbGVkIHdpdGggdGhlIGNsZWFudXAgYnV0dG9uIG5leHQgdG8gdGhlIHJvY2tldC48YnIgLz48YnIgLz5cblxuICAgICAgICAgICAgSWYgeW91ciBzbmlwcGV0IGRvZXMgYW55dGhpbmcgdGhhdCBjYW4gYmUgdW5wYXRjaGVkIHN1Y2ggYXMgcG9sbHV0aW5nIGdsb2JhbCBvciBwYXRjaGluZyBhIGZ1bmN0aW9uIHBsZWFzZSBhZGQgb25lIG9mIHRoZXNlLCBub3Qgb25seSBkb2VzIGl0IG1ha2UgeW91ciBsaWZlIGVhc2llciBieSB1bnBhdGNoaW5nIHN1YnNlcXVlbnQgcmVydW5zIGJ1dCBpdCBhbHNvIGxldHMgdGhlIHVzZXIgdW5wYXRjaCBpdCB0aGVtc2VsZiwgdGhleSB3aWxsIGFsc28gYmUgcnVuIGlmIHRoZSBwbHVnaW4gdW5sb2FkZWQuPGJyIC8+PGJyIC8+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtqb2luKCdjb2RlYmxvY2snKX0+e21ha2VDb2RlQmxvY2soeyBjb250ZW50OiBgcmV0dXJuICgpID0+IHsgdW5wYXRjaCgpOyBMb2dnZXIuaW5mbygnSG93IGFib3V0IHlvdSB1bnBhdGNoIHNvbWUgYml0Y2hlcz8nKTsgfTtgLCBsYW5nOiAnanMnIH0sIG51bGwsIHt9KX08L2Rpdj48YnIgLz5cblxuICAgICAgICAgICAgSWYgYSB0eXBlIG90aGVyIHRoYW4gZnVuY3Rpb24gaXMgcmV0dXJuZWQgbm90aGluZyB3aWxsIGJlIGNhY2hlZCBhbmQgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIGRpc3BsYXllZCBpbiBjb25zb2xlLlxuICAgICAgICAgIDwvRm9ybVRleHQ+XG4gICAgICAgIDwvQWR2YW5jZWRTY3JvbGxlclRoaW4+XG4gICAgICA8L01vZGFsLkNvbnRlbnQ+XG4gICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gTWFuYWdlci5iYWNrdXBTbmlwcGV0cygpfVxuICAgICAgICAgIHNpemU9e0J1dHRvbi5TaXplcy5MQVJHRX1cbiAgICAgICAgICBjb2xvcj17QnV0dG9uLkNvbG9ycy5HUkVFTn0+XG4gICAgICAgICAgQmFja3VwIFNuaXBwZXRzXG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgb25DbGljaz17ZXZlbnQub25DbG9zZX1cbiAgICAgICAgICBsb29rPXtCdXR0b24uTG9va3MuTElOS31cbiAgICAgICAgICBjb2xvcj17QnV0dG9uLkNvbG9ycy5UUkFOU1BBUkVOVH0+XG4gICAgICAgICAgQ2FuY2VsXG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgPC9Nb2RhbC5Sb290PlxuICApO1xufTsiLCIvKiBUaGUgYmVsb3cgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgTUlULiAqL1xuXG5pbXBvcnQgTWFuYWdlciBmcm9tICdAbW9kdWxlcy9NYW5hZ2VyJztcbmltcG9ydCBQYXRjaGVyIGZyb20gJ0Btb2R1bGVzL1BhdGNoZXInO1xuaW1wb3J0IFdlYnBhY2ssIHsgRmlsdGVycyB9IGZyb20gJ0Btb2R1bGVzL1dlYnBhY2snO1xuXG5pbXBvcnQgeyBwam9pbiB9IGZyb20gJ0Btb2R1bGVzL1V0aWxpdGllcyc7XG5cbmltcG9ydCBFZGl0b3IgZnJvbSAnQGNvbXBvbmVudHMvc2VjdGlvbnMvRWRpdG9yJztcbmltcG9ydCBUb3BCYXIgZnJvbSAnQGNvbXBvbmVudHMvc2VjdGlvbnMvVG9wQmFyJztcbmltcG9ydCBTaWRlQmFyIGZyb20gJ0Bjb21wb25lbnRzL3NlY3Rpb25zL1NpZGVCYXInO1xuaW1wb3J0IEluZm9Nb2RhbCBmcm9tICdAY29tcG9uZW50cy9tb2RhbHMvSW5mb3JtYXRpb24nO1xuXG5jb25zdCBbXG4gIEZvcm1UaXRsZSxcbiAgRm9ybVNlY3Rpb24sXG4gIE1vZGFsQWN0aW9ucyxcbiAgU3RpY2tlclBpY2tlcixcbiAgeyBrZXliaW5kOiBrZXliaW5kQ2xhc3MgfSxcbl0gPSBXZWJwYWNrLmJ1bGsoXG4gIEZpbHRlcnMuYnlEaXNwbGF5TmFtZSgnRm9ybVRpdGxlJyksXG4gIEZpbHRlcnMuYnlEaXNwbGF5TmFtZSgnRm9ybVNlY3Rpb24nKSxcbiAgRmlsdGVycy5ieVByb3BzKCdjbG9zZU1vZGFsJyksXG4gIEZpbHRlcnMuYnlEaXNwbGF5TmFtZSgnU3RpY2tlclBpY2tlckxvYWRlcicsIHRydWUpLFxuICBGaWx0ZXJzLmJ5UHJvcHMoJ2Nsb3NlQnV0dG9uQm9sZCcpLFxuKTtcblxuY29uc3QgeyBUb29sdGlwLCBJY29uIH0gPSBXZWJwYWNrLmNvbXBvbmVudHM7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgY29uc3QgZWRpdG9yUmVmID0gUmVhY3QudXNlUmVmPGFueT4oKTtcbiAgY29uc3QgdW5zYXZlZFN0YXRlID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBjb2xsYXBzZWRTdGF0ZSA9IFJlYWN0LnVzZVJlZHVjZXIodiA9PiAhdiwgZmFsc2UpO1xuICBjb25zdCBmb3JjZVVwZGF0ZSA9IFJlYWN0LnVzZVJlZHVjZXIoKCkgPT4gKHt9KSwge30pWzFdO1xuICBjb25zdCBjdXJyZW50U25pcHBldFN0YXRlID0gUmVhY3QudXNlU3RhdGUoTWFuYWdlci5nZXRGaXJzdFNuaXBwZXQoKSk7XG5cbiAgLy8gVGhpcyBpcyBhIGhhY2ssIGNoYW5naW5nIHRoZSBrZXkgb2YgYSBSZWFjdCBjb21wb25lbnQgcmVtb3VudHMgaXQuXG4gIGNvbnN0IFtyZW1vdW50S2V5LCByZW1vdW50TW9uYWNvXSA9IFJlYWN0LnVzZVJlZHVjZXIodiA9PiAhdiwgZmFsc2UpO1xuXG4gIC8vIFNob3ZlIGl0IGEgcmVmIHNvIGl0J3Mgc2F2ZWQgYWNyb3NzIHJlcmVuZGVycy5cbiAgLy8gUmVuZGVyIGhhcyBhIGZhaWxzYWZlIHNvIGlmIHRoZSBrZXkgaXNuJ3QgaW4gc25pcHBldHMgaXQgd2lsbCBzdGlsbCByZW5kZXJcbiAgY29uc3QgbGFzdFNuaXBwZXQgPSBSZWFjdC51c2VSZWYoJ25vIHNuaXBwZXRzPyA6bm9iaXRjaGVzOicpO1xuICBjb25zdCBzZXRDdXJyZW50U25pcHBldCA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgbGFzdFNuaXBwZXQuY3VycmVudCA9IGN1cnJlbnRTbmlwcGV0U3RhdGVbMF07XG4gICAgY3VycmVudFNuaXBwZXRTdGF0ZVsxXSh2YWx1ZSk7XG4gICAgdW5zYXZlZFN0YXRlWzFdKGZhbHNlKTtcbiAgfTtcblxuICAvLyBIaWRlIFwiRVNDXCIgdGV4dCBzbyB0aGUgZWRpdG9yIGRvZXNuJ3Qgb3ZlcmxhcCBpdC5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBub2RlID0gTWFuYWdlci5pbmplY3RDU1MoYFxuICAgICAgLiR7a2V5YmluZENsYXNzfSB7IG9wYWNpdHk6IDA7IH1cbiAgICBgLCAna2V5YmluZC1oaWRlJyk7XG5cbiAgICByZXR1cm4gKCkgPT4gbm9kZS5yZW1vdmUoKTtcbiAgfSk7XG5cbiAgLy8gUGF0Y2ggZG9nc2hpdCBzdGlja2VyIGtleWJpbmQgd29ya2luZyBldmVuIGluIFNldHRpbmdzVmlldy5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIFN0aWNrZXJQaWNrZXI/LmRlZmF1bHQgIT09ICdmdW5jdGlvbicpIHJldHVybjtcbiAgICByZXR1cm4gUGF0Y2hlci5hZnRlcihTdGlja2VyUGlja2VyLCAnZGVmYXVsdCcsIChbYXJnc10pID0+IGFyZ3MuY2xvc2VQb3BvdXQoKSk7XG4gIH0sIFtdKTtcblxuICB0eXBlIEN1cnJlbnRTbmlwcGV0U3RhdGUgPSBbc3RyaW5nLCBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxzdHJpbmc+Piwgc3RyaW5nXTtcbiAgY29uc3QgY3VycmVudFNuaXBwZXQ6IEN1cnJlbnRTbmlwcGV0U3RhdGUgPSBbY3VycmVudFNuaXBwZXRTdGF0ZVswXSwgc2V0Q3VycmVudFNuaXBwZXQsIGxhc3RTbmlwcGV0LmN1cnJlbnRdO1xuXG4gIGNvbnN0IHN0YXRlcyA9IHtcbiAgICBlZGl0b3JSZWYsXG4gICAgZm9yY2VVcGRhdGUsXG4gICAgdW5zYXZlZFN0YXRlLFxuICAgIHJlbW91bnRNb25hY28sXG4gICAgY3VycmVudFNuaXBwZXQsXG4gICAgY29sbGFwc2VkU3RhdGUsXG4gIH07XG5cbiAgLy8gU2V0IG1hbmFnZXIgdG8gdXBkYXRlIHRoaXMgY29tcG9uZW50IG9uIGZpbGUgY2hhbmdlLlxuICBNYW5hZ2VyLnNldFVwZGF0ZShmb3JjZVVwZGF0ZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Rm9ybVNlY3Rpb24+XG4gICAgICA8Rm9ybVRpdGxlIGNsYXNzTmFtZT17cGpvaW4oWydoZWFkZXInLCAndGl0bGUnXSl9IHRhZz0naDEnPkNvZGUgU25pcHBldHM8L0Zvcm1UaXRsZT5cbiAgICAgIDxUb29sdGlwIGNsYXNzTmFtZT17cGpvaW4oWydoZWFkZXInLCAnaWNvbicsICd0b29sdGlwJ10pfSB0ZXh0PSdJbmZvcm1hdGlvbiBNb2RhbCcgcG9zaXRpb249J3RvcCc+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtwam9pbihbJ2hlYWRlcicsICdpY29uJ10pfSBvbkNsaWNrPXsoKSA9PiBNb2RhbEFjdGlvbnMub3Blbk1vZGFsKChldmVudCkgPT4gPEluZm9Nb2RhbCBldmVudD17ZXZlbnR9IC8+KX0+XG4gICAgICAgICAgPEljb24uSW5mbyBoZWlnaHQ9JzE2JyB3aWR0aD0nMTYnIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Ub29sdGlwPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e3Bqb2luKCdjb250YWluZXInKX0+XG4gICAgICAgIDxTaWRlQmFyIHN0YXRlcz17c3RhdGVzfSAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17cGpvaW4oWydlZGl0b3InLCAnY29udGFpbmVyJ10pfT5cbiAgICAgICAgICA8VG9wQmFyIHN0YXRlcz17c3RhdGVzfSAvPlxuICAgICAgICAgIDxFZGl0b3Igc3RhdGVzPXtzdGF0ZXN9IGtleT17TnVtYmVyKHJlbW91bnRLZXkpfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRm9ybVNlY3Rpb24+XG4gICk7XG59OyJdLCJuYW1lcyI6WyJXZWJwYWNrIiwiTWFuYWdlciIsIm1vbmFjbyIsImNqb2luIiwiY2FsbEFyZ3MiLCJqb2luIiwiU2V0dGluZ3NTdG9yZSIsImdldEJ5UHJvcHMiLCJyZ2JUb0hleCIsInJlZCIsImdyZWVuIiwiYmx1ZSIsImFscGhhIiwibWFwIiwidiIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJwYXJzZUNvbG9yIiwic3RyIiwic2hlZXQiLCJDU1NTdHlsZVNoZWV0IiwicmVwbGFjZVN5bmMiLCJjc3NSdWxlcyIsInN0eWxlIiwiY29sb3IiLCJtYXRjaCIsIk51bWJlciIsImdldFZhbHVlIiwidmFsdWUiLCJib2R5IiwiZ2V0UHJvcGVydHlWYWx1ZSIsInRyaW0iLCJjcmVhdGVFZGl0b3JUaGVtZSIsImdldENvbXB1dGVkU3R5bGUiLCJkb2N1bWVudCIsImNvbG9ycyIsInRleHRDb2xvciIsImJnQWNjZW50IiwiYmdGbG9hdGluZyIsImJnVGVyaXRhcnkiLCJsaWdodE1vZGUiLCJzZXR0aW5ncyIsImFwcGVhcmFuY2UiLCJ0aGVtZSIsImVkaXRvciIsImRlZmluZVRoZW1lIiwiaW5oZXJpdCIsImJhc2UiLCJydWxlcyIsImJhY2tncm91bmQiLCJwYXJzZUxhbmd1YWdlIiwiZXh0ZW5zaW9uIiwic3RhdGVzIiwiZWRpdG9yUmVmIiwiYmluZGluZ3MiLCJSZWFjdCIsInVzZVJlZiIsImNvbnRhaW5lclJlZiIsInNldFVuc2F2ZWQiLCJ1bnNhdmVkU3RhdGUiLCJjb2xsYXBzZWQiLCJjb2xsYXBzZWRTdGF0ZSIsImN1cnJlbnRTbmlwcGV0Iiwib25LZXlQcmVzcyIsImV2ZW50IiwiY3VycmVudCIsImN0cmxLZXkiLCJrZXkiLCJzY3JpcHRUeXBlIiwiZ2V0U2NyaXB0VHlwZSIsImRpZEVycm9yIiwidXBkYXRlU25pcHBldCIsImVuYWJsZWQiLCJnZXRTbmlwcGV0IiwiY29kZSIsIm1ha2VUb2FzdCIsInJ1blNuaXBwZXQiLCJTY3JpcHRUeXBlIiwiQ1NTIiwidXNlRWZmZWN0IiwiQ29kZVNuaXBwZXRzTmF0aXZlIiwicmVhZERpciIsImZvckVhY2giLCJtb2R1bGUiLCJjb250ZW50IiwicmVhZEZpbGUiLCJsYW5ndWFnZXMiLCJ0eXBlc2NyaXB0IiwidHlwZXNjcmlwdERlZmF1bHRzIiwiYWRkRXh0cmFMaWIiLCJqYXZhc2NyaXB0RGVmYXVsdHMiLCJzZXREaWFnbm9zdGljc09wdGlvbnMiLCJub1NlbWFudGljVmFsaWRhdGlvbiIsIm5vU3ludGF4VmFsaWRhdGlvbiIsImRpYWdub3N0aWNDb2Rlc1RvSWdub3JlIiwiRWRpdG9yIiwiY3JlYXRlIiwiYXV0b21hdGljTGF5b3V0IiwibGFuZ3VhZ2UiLCJwdXNoIiwib25EaWRDaGFuZ2VNb2RlbENvbnRlbnQiLCJyZXNvbHZlVGltZW91dCIsInRyYWNrZXIiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc3Bvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGl2IiwiY2xhc3NOYW1lIiwicmVmIiwibWVtbyIsInN2ZyIsInZpZXdCb3giLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJwYXRoIiwiZCIsIkZpbHRlcnMiLCJCdXR0b24iLCJGb3JtSXRlbSIsIkZvcm1UaXRsZSIsIlRleHRJbnB1dCIsImJ1bGsiLCJieVByb3BzIiwiYnlEaXNwbGF5TmFtZSIsIk1vZGFsIiwiY29tcG9uZW50cyIsImFjdGlvbiIsIm9wdGlvbnMiLCJpbnB1dCIsIl9zZXRJbnB1dCIsInVzZVN0YXRlIiwiaW5pdGlhbElucHV0IiwicmVqZWN0TWVzc2FnZSIsInNldFJlamVjdE1lc3NhZ2UiLCJ1bmRlZmluZWQiLCJpbnB1dFJlZiIsInNldElucHV0IiwiZGF0YSIsInJ1bkFjdGlvbiIsInJlamVjdEZpbHRlciIsInJlamVjdCIsIm9uQ2xvc2UiLCJvbkVudGVyIiwia2V5UHJlc3NFdmVudCIsIlJvb3QiLCJ0cmFuc2l0aW9uU3RhdGUiLCJzaXplIiwiU2l6ZXMiLCJTTUFMTCIsIkhlYWRlciIsInRhZyIsInRpdGxlVGV4dCIsIkNsb3NlQnV0dG9uIiwib25DbGljayIsIm1hcmdpblRvcCIsIkNvbnRlbnQiLCJlcnJvciIsInRpdGxlIiwiaGVhZGVyVGV4dCIsIm9uQ2hhbmdlIiwibWFyZ2luQm90dG9tIiwicGxhY2Vob2xkZXIiLCJGb290ZXIiLCJDb2xvcnMiLCJHUkVFTiIsImJ1dHRvblRleHQiLCJsb29rIiwiTG9va3MiLCJMSU5LIiwiVFJBTlNQQVJFTlQiLCJUZXh0IiwiU0laRV8yNCIsIkhFQURFUl9QUklNQVJZIiwiU0laRV8xNiIsIkhFQURFUl9TRUNPTkRBUlkiLCJMQVJHRSIsIlJFRCIsInNsZWVwIiwiU2F2ZUljb24iLCJDbGVhbkljb24iLCJVc2VySW5wdXQiLCJEZWxldGVDb25maXJtIiwicGpvaW4iLCJTd2l0Y2giLCJCdXR0b25Db2xvcnMiLCJNb2RhbEFjdGlvbnMiLCJJY29uIiwiVG9vbHRpcCIsImJ1dHRvbiIsImRhbmdlcm91cyIsImRpc2FibGVkIiwidW5zYXZlZCIsInNldEN1cnJlbnRTbmlwcGV0IiwibGFzdFNuaXBwZXQiLCJzbmlwcGV0IiwiQm9vbGVhbiIsInBvc2l0aW9uIiwidGV4dCIsImZsZXgiLCJjbGVhbnVwcyIsImNoZWNrZWQiLCJnaXN0IiwicHVsbEdpc3QiLCJjYXRjaCIsIkxvZ2dlciIsInJlbW91bnRNb25hY28iLCJQdWxsIiwiaWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsIm9wZW5Nb2RhbCIsInRlc3QiLCJuYW1lIiwiTGluayIsIlJvY2tldCIsImRlbGV0ZVNuaXBwZXQiLCJUcmFzaCIsInhtbG5zIiwiZmlsbC1ydWxlIiwiY2xpcC1ydWxlIiwic3Ryb2tlIiwic3Ryb2tlLXdpZHRoIiwiVFMiLCJKUyIsIkpTWCIsIlNBU1MiLCJlYWNoIiwiZmFsbGJhY2siLCJjaGlsZHJlbiIsImxlbmd0aCIsImVsZW1lbnRzIiwiaSIsIkZvckVhY2hPcHRpbWl6ZWQiLCJleGVjIiwiZXh0ZW5zaW9ucyIsIlNuaXBwZXRJY29uIiwiRHJhZ0hvb2tzIiwiQ29udGV4dE1lbnVBY3Rpb25zIiwiQ29udGV4dE1lbnUiLCJCYXJsZXNzU2Nyb2xsZXIiLCJMRUZUIiwiUklHSFQiLCJDYXJldCIsIkRpcmVjdGlvbnMiLCJkcmFnZ2luZ1JlZiIsInNldERyYWdnaW5nIiwidHlwZSIsInRvZ2dsZUNvbGxhcHNlZCIsInNwbGl0IiwiY3JlYXRlU25pcHBldCIsImdldFNuaXBwZXRzIiwic29tZSIsImV4dCIsInRvTG93ZXJDYXNlIiwiZW5kc1dpdGgiLCJQbHVzIiwiZGlyZWN0aW9uIiwiT2JqZWN0Iiwia2V5cyIsImluZGV4IiwiVGFiSXRlbSIsInN0YXRlIiwiZm9yY2VVcGRhdGUiLCJ1c2VEcmFnIiwidXNlRHJvcCIsImRyYWdJbmRleCIsImRyb3AiLCJhY2NlcHQiLCJkcm9wSW5kZXgiLCJjb2xsZWN0IiwibW9uaXRvciIsImdldEl0ZW0iLCJpc092ZXIiLCJkcmFnIiwiaXRlbSIsImVuZCIsIl8iLCJnZXREcm9wUmVzdWx0IiwibW92ZVNuaXBwZXQiLCJ0b29sdGlwVmlzaWJsZSIsInNldFRvb2x0aXBWaXNpYmxlIiwidGltZXIiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInNob3VsZFNob3ciLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJub2RlIiwib25Db250ZXh0TWVudSIsIlRhYkl0ZW1Db250ZXh0TWVudSIsIm9wZW5Db250ZXh0TWVudSIsIkNvbnRhaW5lciIsImNsb3NlQ29udGV4dE1lbnUiLCJJdGVtIiwibGFiZWwiLCJjb25zb2xlIiwibG9nIiwiaW5jbHVkZXMiLCJyZW5hbWVTbmlwcGV0Iiwic2ltcGxlRGVkZW50Iiwic3RyaW5nIiwiRm9ybVRleHQiLCJBZHZhbmNlZFNjcm9sbGVyVGhpbiIsIm1ha2VDb2RlQmxvY2siLCJkZWZhdWx0UnVsZXMiLCJjb2RlQmxvY2siLCJyZWFjdCIsInBhZGRpbmdCb3R0b20iLCJiciIsImxhbmciLCJiYWNrdXBTbmlwcGV0cyIsIlBhdGNoZXIiLCJUb3BCYXIiLCJTaWRlQmFyIiwiSW5mb01vZGFsIiwiRm9ybVNlY3Rpb24iLCJTdGlja2VyUGlja2VyIiwia2V5YmluZCIsImtleWJpbmRDbGFzcyIsInVzZVJlZHVjZXIiLCJjdXJyZW50U25pcHBldFN0YXRlIiwiZ2V0Rmlyc3RTbmlwcGV0IiwicmVtb3VudEtleSIsImluamVjdENTUyIsInJlbW92ZSIsImRlZmF1bHQiLCJhZnRlciIsImFyZ3MiLCJjbG9zZVBvcG91dCIsInNldFVwZGF0ZSIsIkluZm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4203\n')},1222:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5548);\n/* harmony import */ var _Webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(795);\n/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(647);\nvar ScriptType;(function(ScriptType){ScriptType[ScriptType[\"JS\"]=0]=\"JS\";ScriptType[ScriptType[\"CSS\"]=1]=\"CSS\"})(ScriptType||(ScriptType={}));const PATH='src/snippets.json';let cleanups={};let update;const setUpdate=newUpdate=>{update=newUpdate};const[{createToast},{showToast}]=_Webpack__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"].getByProps */ .Z.getByProps('createToast','showToast',{bulk:true});const makeToast=(info,success)=>{if(window.powercord?.api?.notices?.sendToast)return window.powercord.api.notices.sendToast(null,{content:info,timeout:success?2500:3500,type:success?'success':'danger',header:success?'Snippet Action Successful':'Snippet Action Unsuccessful'});showToast(createToast(info,success||2))};const cleanup=()=>{Object.keys(cleanups).forEach(async key=>{try{await cleanups[key]();delete cleanups[key]}catch(error){makeToast(`Error running the cleanup function for ${key}! Check console for more details.`);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error running the cleanup function for ${key}!`,error)}})};const writeSnippets=snippets=>{let error1;CodeSnippetsNative.writeFile(PATH,JSON.stringify(snippets,null,'\\t'),error=>{makeToast(`Error trying to write to the snippets file! Check console for more details.`);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error('Error trying to write to the snippets file!',error);error=true});if(error1)return error1;update?.()};const i18n=_Webpack__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"].getByProps */ .Z.getByProps('getLocale');const backupSnippets=()=>{const timestamp=new Date().toLocaleString(i18n.getLocale(),{hourCycle:'h24'}).replace(/[\\/:]/g,'-').replace(', ','-');let error2;CodeSnippetsNative.writeFile(`src/backup-${timestamp}.json`,JSON.stringify(getSnippets()),error=>{makeToast(`Error trying to back up the snippets file! Check console for more details.`);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error('Error trying to back up the snippets file!',error);error=true});if(error2)return;makeToast(`Successfully backed up snippets to backup-${timestamp}.json!`,true);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].info */ .Z.info(`Successfully backed up snippets to backup-${timestamp}.json!`)};const getScriptType=name=>{const snippet=getSnippet(name);if(snippet.extension.endsWith('ss'))return ScriptType.CSS;else if(snippet.extension in _Utilities__WEBPACK_IMPORTED_MODULE_2__/* .extensions */ .Rw)return ScriptType.JS};const getSnippets=()=>{const snippets=CodeSnippetsNative.readFile(PATH);return snippets?JSON.parse(snippets):{}};const getSnippet=name=>{const snippets=getSnippets();if(!Object.keys(snippets).length||!snippets[name])return{code:'',extension:'',enabled:false};return snippets[name]};const getFirstSnippet=()=>{return Object.keys(getSnippets())?.[0]};const createSnippet=(name,extension,enabled)=>{let snippets=getSnippets();try{Object.assign(snippets,{[name]:{code:'',enabled:enabled??false,extension}})}catch(error){makeToast(`Error creating snippet ${name}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error creating snippet ${name}.`,error)}return writeSnippets(snippets)};const updateSnippet=(name,snippet)=>{let snippets=getSnippets();snippet=Object.assign(getSnippet(name),snippet);try{Object.assign(snippets,{[name]:snippet})}catch(error){makeToast(`Error writing snippet ${name}! Check console for more details.`);return  true||0}return writeSnippets(snippets)};const deleteSnippet=name=>{let snippets=getSnippets();try{delete snippets[name];cleanups[name]?.()}catch(error){makeToast(`Error deleting snippet ${name}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error deleting snippet ${name}!`,error)}return writeSnippets(snippets)};const renameSnippet=(name,newName)=>{console.log(name,newName);let snippets=getSnippets();try{let index=Object.keys(snippets).indexOf(name);let array=Object.entries(snippets);array.splice(index,1,[newName,snippets[name]]);snippets=Object.fromEntries(array)}catch(error){makeToast(`Error renaming snippet ${name} to ${newName}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error renaming snippet ${name} to ${newName}!`,error)}return writeSnippets(snippets)};const moveSnippet=(name,index)=>{let snippets=getSnippets();try{let value=snippets[name];let array=Object.entries(snippets).filter(([key])=>key!==name);array.splice(index,0,[name,value]);snippets=Object.fromEntries(array)}catch(error){makeToast(`Error moving snippet ${name}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error moving snippet ${name}!`,error)}return writeSnippets(snippets)};const runCode=async(name,snippet,silent)=>{let returnValue;try{returnValue=await new Function(`\n        let Logger  = window.cs.logger;\n        let Patcher = window.cs.patcher;\n        let Webpack = window.cs.webpack;\n        let Manager = window.cs.manager;\n\n        return (async () => { ${CodeSnippetsNative.compile(snippet.code,snippet.extension)} })();\n      `)()}catch(error){makeToast(`Error running snippet ${name||'QuickRun'}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error running snippet ${name||'QuickRun'}!`,error)}silent??makeToast(`Successfully ran ${name||'QuickRun'}!`,true);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].info */ .Z.info(`Successfully ran ${name||'QuickRun'}!`,returnValue?'':`Returned: ${returnValue}`);update?.();return returnValue};const injectCSS=(data,id,customNode)=>{const createElement=(options={})=>{return Object.assign(document.createElement('style'),options)};const node=createElement({textContent:data,id:`code-snippets-${id}`});(customNode??document.head).appendChild(node);return node};const runSnippet=async(name,type,silent1)=>{if(!getSnippets()[name])return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].warn */ .Z.warn(`Snippet ${name} does not exist!`);const snippet=getSnippet(name);await cleanups[name]?.(true);if(type===ScriptType.CSS){const node=injectCSS(CodeSnippetsNative.compile(snippet.code,snippet.extension),name);cleanups[name]=silent=>{node.remove();delete cleanups[name];if(!silent)makeToast(`Successfully removed CSS for ${name}!`,true);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].info */ .Z.info(`Successfully removed CSS for ${name}!`,node);update?.()};if(!silent1)makeToast(`Successfully loaded CSS for ${name}! Check console for node info.`,true);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].info */ .Z.info(`Successfuly loaded CSS for ${name}!`,node)}else{const cleanup1=await runCode(name,snippet,silent1);if(typeof cleanup1==='function'){cleanups[name]=async silent=>{let unpatchReturn;try{unpatchReturn=await cleanup1();delete cleanups[name]}catch(error){makeToast(`Error running the cleanup function for ${name}! Check console for more details.`);return _Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].error */ .Z.error(`Error running the cleanup function for ${name}!`,error)}if(!silent)makeToast(`Successfully ran cleanup function for ${name}!`,true);_Logger__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"].info */ .Z.info(`Successfully ran cleanup function for ${name}!`,unpatchReturn&& typeof unpatchReturn!=='function'?'':`Returned: ${unpatchReturn}`);update?.()}}}update?.()};const pullGist=async gist=>{const data=await (await fetch(`https://api.github.com/gists/${gist.id}`)).json();if(data.message)return Promise.reject('Gist does not exist!');const code=data.files[gist.name]?.content??data.files[Object.keys(data.files)[0]]?.content;if(!code)return Promise.reject('Gist does not contain any files!');return code};/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({makeToast,cleanup,setUpdate,getSnippets,getFirstSnippet,getSnippet,getScriptType,backupSnippets,deleteSnippet,moveSnippet,updateSnippet,renameSnippet,createSnippet,runCode,injectCSS,runSnippet,pullGist,ScriptType,get cleanups(){return cleanups}});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1222\n")},647:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"As\": () => (/* binding */ pjoin),\n/* harmony export */   \"Rw\": () => (/* binding */ extensions),\n/* harmony export */   \"VS\": () => (/* binding */ callArgs),\n/* harmony export */   \"_v\": () => (/* binding */ sleep),\n/* harmony export */   \"hI\": () => (/* binding */ cjoin),\n/* harmony export */   \"v_\": () => (/* binding */ join)\n/* harmony export */ });\nconst packagePrefix='code-snippets';const _join=(prefix,classes)=>{return classes.map(value=>`${prefix?`${prefix}-`:''}${Array.isArray(value)?value.join('-'):value}`).join(' ')};const extensions=['js','ts','jsx','css','scss','sass'];function join(...classes){return _join('',classes)}function pjoin(...classes){return`${packagePrefix}-${_join('',classes)}`}function cjoin(prefix){return(...classes)=>{return _join(`${packagePrefix}-${prefix}`,classes)}}function sleep(ms){return new Promise(res=>setTimeout(res,ms))}function callArgs(functions,callMethod){functions.forEach(f=>callMethod?f[callMethod]?.():f?.())}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQ3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUEsS0FBSyxDQUFDQSxhQUFhLENBQUcsQ0FBZSxlQUVyQyxLQUFLLENBQUNDLEtBQUssRUFBSUMsTUFBYyxDQUFFQyxPQUE4QixHQUFLLENBQUMsTUFDM0QsQ0FBQ0EsT0FBTyxDQUFDQyxHQUFHLENBQUNDLEtBQUssS0FDbkJILE1BQU0sSUFBTUEsTUFBTSxDQUFDLENBQUMsRUFBSSxDQUFFLElBQUdJLEtBQUssQ0FBQ0MsT0FBTyxDQUFDRixLQUFLLEVBQUlBLEtBQUssQ0FBQ0csSUFBSSxDQUFDLENBQUcsSUFBSUgsS0FBSyxJQUM3RUcsSUFBSSxDQUFDLENBQUcsR0FDYixDQUFDLENBRU0sS0FBSyxDQUFDQyxVQUFVLENBQUcsQ0FBQyxDQUFJLElBQUUsQ0FBSSxJQUFFLENBQUssS0FBRSxDQUFLLEtBQUUsQ0FBTSxNQUFFLENBQU0sTUFBQyxDQUU3RCxTQUFTRCxJQUFJLElBQUlMLE9BQU8sQ0FBeUIsQ0FBQyxNQUNqRCxDQUFDRixLQUFLLENBQUMsQ0FBRSxFQUFFRSxPQUFPLENBQzFCLENBRU8sU0FBU08sS0FBSyxJQUFJUCxPQUFPLENBQXlCLENBQUMsTUFDbEQsR0FBSUgsYUFBYSxDQUFDLENBQUMsRUFBRUMsS0FBSyxDQUFDLENBQUUsRUFBRUUsT0FBTyxHQUM5QyxDQUVPLFNBQVNRLEtBQUssQ0FBQ1QsTUFBYyxDQUFFLENBQUMsTUFDL0IsSUFBS0MsT0FBTyxHQUE0QixDQUFDLE1BQ3ZDLENBQUNGLEtBQUssSUFBSUQsYUFBYSxDQUFDLENBQUMsRUFBRUUsTUFBTSxHQUFJQyxPQUFPLENBQ3BELENBQUMsQ0FHSSxTQUFTUyxLQUFLLENBQUNDLEVBQVUsQ0FBRSxDQUFDLE1BQzNCLENBQUMsR0FBRyxDQUFDQyxPQUFPLENBQUNDLEdBQUcsRUFBSUMsVUFBVSxDQUFDRCxHQUFHLENBQUVGLEVBQUUsRUFDOUMsQ0FFTyxTQUFTSSxRQUFRLENBQUNDLFNBQXFCLENBQUVDLFVBQW1CLENBQU8sQ0FBQyxTQUNoRSxDQUFDQyxPQUFPLENBQUNDLENBQUMsRUFBSUYsVUFBVSxDQUFHRSxDQUFDLENBQUNGLFVBQVUsTUFBUUUsQ0FBQyxLQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9yZW5kZXJlci9tb2R1bGVzL1V0aWxpdGllcy50c3g/ODVlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGUgYmVsb3cgY29kZSBpcyBsaWNlbnNlZCB1bmRlciBNSVQuICovXG5cbmNvbnN0IHBhY2thZ2VQcmVmaXggPSAnY29kZS1zbmlwcGV0cyc7XG5cbmNvbnN0IF9qb2luID0gKHByZWZpeDogc3RyaW5nLCBjbGFzc2VzOiAoc3RyaW5nIHwgc3RyaW5nW10pW10pID0+IHtcbiAgcmV0dXJuIGNsYXNzZXMubWFwKHZhbHVlID0+IChcbiAgICBgJHtwcmVmaXggPyBgJHtwcmVmaXh9LWAgOiAnJ30ke0FycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuam9pbignLScpIDogdmFsdWV9YFxuICApKS5qb2luKCcgJyk7XG59O1xuXG5leHBvcnQgY29uc3QgZXh0ZW5zaW9ucyA9IFsnanMnLCAndHMnLCAnanN4JywgJ2NzcycsICdzY3NzJywgJ3Nhc3MnXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGpvaW4oLi4uY2xhc3NlczogKHN0cmluZyB8IHN0cmluZ1tdKVtdKSB7XG4gIHJldHVybiBfam9pbignJywgY2xhc3Nlcyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwam9pbiguLi5jbGFzc2VzOiAoc3RyaW5nIHwgc3RyaW5nW10pW10pIHtcbiAgcmV0dXJuIGAke3BhY2thZ2VQcmVmaXh9LSR7X2pvaW4oJycsIGNsYXNzZXMpfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjam9pbihwcmVmaXg6IHN0cmluZykge1xuICByZXR1cm4gKC4uLmNsYXNzZXM6IChzdHJpbmcgfCBzdHJpbmdbXSlbXSkgPT4ge1xuICAgIHJldHVybiBfam9pbihgJHtwYWNrYWdlUHJlZml4fS0ke3ByZWZpeH1gLCBjbGFzc2VzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNsZWVwKG1zOiBudW1iZXIpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlcyA9PiBzZXRUaW1lb3V0KHJlcywgbXMpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGxBcmdzKGZ1bmN0aW9uczogRnVuY3Rpb25bXSwgY2FsbE1ldGhvZD86IHN0cmluZyk6IGFueSB7XG4gIGZ1bmN0aW9ucy5mb3JFYWNoKGYgPT4gY2FsbE1ldGhvZCA/IGZbY2FsbE1ldGhvZF0/LigpIDogZj8uKCkpO1xufTsiXSwibmFtZXMiOlsicGFja2FnZVByZWZpeCIsIl9qb2luIiwicHJlZml4IiwiY2xhc3NlcyIsIm1hcCIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsImV4dGVuc2lvbnMiLCJwam9pbiIsImNqb2luIiwic2xlZXAiLCJtcyIsIlByb21pc2UiLCJyZXMiLCJzZXRUaW1lb3V0IiwiY2FsbEFyZ3MiLCJmdW5jdGlvbnMiLCJjYWxsTWV0aG9kIiwiZm9yRWFjaCIsImYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///647\n")}}]);